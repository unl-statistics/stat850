[
  {
    "objectID": "slides/12-simulation-2.html#todays-goals",
    "href": "slides/12-simulation-2.html#todays-goals",
    "title": "Simulation - now with results!",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\n\nWork on deliverable number 3 for homework 11: simulate!\nThree deliverables in total: pseudocode.qmd, craps-code.qmd, and simulation.qmd (this week)"
  },
  {
    "objectID": "slides/12-simulation-2.html#simulate.qmd",
    "href": "slides/12-simulation-2.html#simulate.qmd",
    "title": "Simulation - now with results!",
    "section": "Simulate.qmd",
    "text": "Simulate.qmd\n\nIn your repo, create a file with that name.\nYou need to answer the following three questions:\n\nWhich probability do you want to estimate?\nWhat is the simulation result (in numbers and visuals)?\nWhat is the simulation variability?\n\n\nMake sure to set a seed to make your analysis reproducible."
  },
  {
    "objectID": "slides/12-simulation-2.html#resources",
    "href": "slides/12-simulation-2.html#resources",
    "title": "Simulation - now with results!",
    "section": "Resources",
    "text": "Resources\n\nR cheat sheet\npython cheat sheet"
  },
  {
    "objectID": "slides/10a-latex-markdown.html#contents",
    "href": "slides/10a-latex-markdown.html#contents",
    "title": "LaTeX and Markdown",
    "section": "Contents",
    "text": "Contents\n(in chronological order)\n\nLaTeX\nMarkdown and Pandoc\nAdding in R\n\nSweave/knitr\nRmarkdown/quarto\n\nSpecial Document Types"
  },
  {
    "objectID": "slides/10a-latex-markdown.html#latex-a-document-prep-system",
    "href": "slides/10a-latex-markdown.html#latex-a-document-prep-system",
    "title": "LaTeX and Markdown",
    "section": "LaTeX: a document prep system",
    "text": "LaTeX: a document prep system\n\n\nThink of it as the digital version of a printing press.\nYou will use tags to control the formatting of your document, and then compile it to PDF.\n\n\\emph{} for italic text\n\\textbf{} for bold text\n{\\HUGE }, {\\footnotesize }\n\nThe LaTeX system lays out your document according to a set of rules for spacing, margins, figure captions, cross-references, …\n\n\n\n\nPrinting press"
  },
  {
    "objectID": "slides/10a-latex-markdown.html#latex-editors",
    "href": "slides/10a-latex-markdown.html#latex-editors",
    "title": "LaTeX and Markdown",
    "section": "LaTeX Editors",
    "text": "LaTeX Editors\nWhile a .tex file is just a text file, it can help to use a dedicated editor that will compile your document for you.\nSome options:\n\nRStudio (my default)\nOverleaf.com (real-time compilation, collaboration)\nTeXWorks\nLyX - What-you-see-is-what-you-get (WYSIWYG) LaTeX editor\n\nOf these, Lyx and Rstudio support integrating your code with your document using knitr/Sweave.\nLaTeX cheatsheet\nLearn LaTeX in 30 minutes"
  },
  {
    "objectID": "slides/10a-latex-markdown.html#basic-latex",
    "href": "slides/10a-latex-markdown.html#basic-latex",
    "title": "LaTeX and Markdown",
    "section": "Basic LaTeX",
    "text": "Basic LaTeX\n\n\n\n\\documentclass{article}     % 1\n\\usepackage[utf8]{inputenc} % 2\n\n\\usepackage{natbib}         % 3 \n\\usepackage{graphicx}       % 4\n\n\\title{Demo}                % 5\n\\author{Susan VanderPlas}\n\\date{\\today}\n\n\\begin{document}            % 6\n\n\\maketitle                  % 7\n\n\\section{Introduction}      % 8\n\\citet{adams1995hitchhiker}\n\\section{Conclusion}\n\n\\bibliographystyle{plain}   % 9\n\\bibliography{refs}\n\\end{document}\nBasic LaTeX document\n\n\ntype of document (article)\nallow UTF-8 characters\nuse a bibliography\nallow pictures\nDocument header information\nActual document content\nCreate document title/header\nCreate introduction section (with a citation)\nCreate the bibliography\n\nOverleaf Gallery of possibilities\n\n\nLink to edit document"
  },
  {
    "objectID": "slides/10a-latex-markdown.html#bibtex",
    "href": "slides/10a-latex-markdown.html#bibtex",
    "title": "LaTeX and Markdown",
    "section": "BibTeX",
    "text": "BibTeX\nOne of the most wonderful parts of LaTeX is BibTeX, which handles your citations for you.\n\nYou type your references in only once (in a markup style called bibtex)\nCitations in your paper are or or \nYou set the reference type at the top of the document (numeric, alphabetical, etc.)\nAt the end of the document you add a command for where the bibliography goes\n\nBibtex does all of the hard work of cross-linking your references with the bibliography, formatting, etc.\n\n\n\n\nThere are various options for (free!) citation managers - personally, I love Zotero and Mendeley because they also integrate with RStudio.\nOther tools: Evernote, Papers\nRecent blog with comparison of these and a few other reference managers.\nAll these programs help to keep track of papers and associated notes and will export BibTeX automatically.\nThey also come with browser addins that will easily save papers to your library as you surf."
  },
  {
    "objectID": "slides/10a-latex-markdown.html#typesetting-math",
    "href": "slides/10a-latex-markdown.html#typesetting-math",
    "title": "LaTeX and Markdown",
    "section": "Typesetting math",
    "text": "Typesetting math\n\n\nInline math: $x + 2$\nCentered math:\n$$ x+2 $$\n \n \n \nSystems of equations:\n\\begin {align} x &= a + b\\\\\ny &= c + d \\end{align}\n \nMath characters:\n\\alpha, \\beta, \\gamma, \\infty, \\rightarrow, \\int,\\frac{a}{b}\n\n\\(x + 2\\) is an inline equation.\nWe can also center equations within a paragraph, like this: \\[x + 2\\] The paragraph resumes after we’re done.\nSystems of equations:\n\\(\\begin{align} x &= a + b\\\\ y &= c + d\\end{align}\\)\n \nMath characters:\n\\[\\alpha,\\beta,\\gamma,\\infty,\\rightarrow,\\int,\\frac{a}{b}\\]\n\nCheatsheet for math mode"
  },
  {
    "objectID": "slides/10a-latex-markdown.html#try-it-out",
    "href": "slides/10a-latex-markdown.html#try-it-out",
    "title": "LaTeX and Markdown",
    "section": "Try it out!",
    "text": "Try it out!\nMinimal LaTeX document:\n\\documentclass{article}\n\\begin{document}\nHello \\LaTeX!\n\\end{document}\n\nAdd an image\nAdd the quadratic formula and the PDF of a normal distribution to the document\nIn extremely large text, print LaTeX using the \\LaTeX command\nIn extremely small, italic text, print your name"
  },
  {
    "objectID": "slides/10a-latex-markdown.html#pandoc",
    "href": "slides/10a-latex-markdown.html#pandoc",
    "title": "LaTeX and Markdown",
    "section": "Pandoc",
    "text": "Pandoc\n LaTeX only creates PDF files (and PostScript files, but nevermind those).\nEnter pandoc, which was supposed to be a “universal translator” of markup formats.\nMarkdown document -&gt;\n\nhtml\nepub\ndocx\nLaTeX\nother markdown flavors\n…\n\nWith pandoc, the goal is to transfer the content; the exact formatting is less of a priority. Thus, only a small set of formatting options are supported.\nYou can use the same BibTeX files in markdown with Pandoc!"
  },
  {
    "objectID": "slides/10a-latex-markdown.html#try-it-out-1",
    "href": "slides/10a-latex-markdown.html#try-it-out-1",
    "title": "LaTeX and Markdown",
    "section": "Try it out!",
    "text": "Try it out!\n\n\nMinimal markdown document:\n---\ntitle: \"Demo\"\nauthor: \"Me\"\ndate: \"October 2020\"\noutput: \n  word_document: default\n  html_document: default\n  pdf_document: default\n---\n\n# Introduction\n\n# Conclusion\n\n# References\nmarkdown cheatsheet\n\n\nAdd an image from the internet\nAdd the quadratic formula and the probability density function of a normal distribution to the document\nMath mode works the same in markdown as in LaTeX (mostly)\nAdd a citation to the Hitchhiker’s Guide using this references file"
  },
  {
    "objectID": "slides/10a-latex-markdown.html#latex-r",
    "href": "slides/10a-latex-markdown.html#latex-r",
    "title": "LaTeX and Markdown",
    "section": "LaTeX + R?",
    "text": "LaTeX + R?\n Sweave was the original document compilation system for combining LaTeX and R\n(created circa 2002)\n\nBasic structure was great\nCaching was terrible (so all code re-ran each time you changed formatting a bit)\n\nknitr: created in 2012 by Yihui Xie to be a better version of Sweave\n\nSame basic syntax\nbetter caching & dependency management\nAll Sweave features + some\nSupport for Python, Perl, C++, shell scripts"
  },
  {
    "objectID": "slides/10a-latex-markdown.html#latex-r-1",
    "href": "slides/10a-latex-markdown.html#latex-r-1",
    "title": "LaTeX and Markdown",
    "section": "LaTeX + R?",
    "text": "LaTeX + R?\nknitr reference manual\n\n\nTo add R code to your .tex file,\n\nChange the file extension from .tex to .Rnw (Rnw = R no weave, a holdover from Sweave)\nAdd R code chunks\nCompile your document\n\n\nR code chunks in .Rnw documents\n&lt;&lt;chunk-name, chunk-options&gt;&gt;=\n\nR code here\n\n@"
  },
  {
    "objectID": "slides/10a-latex-markdown.html#rmarkdown",
    "href": "slides/10a-latex-markdown.html#rmarkdown",
    "title": "LaTeX and Markdown",
    "section": "Markdown + R?",
    "text": "Markdown + R?\nYou’ve been using quarto for the entire semester, but it works essentially the same way as adding R to LaTeX:\n\nRmarkdown WorkflowQuarto is similar, but supports even more formats and allows you to use even more programming languages in code chunks."
  },
  {
    "objectID": "slides/10a-latex-markdown.html#code-chunk-options",
    "href": "slides/10a-latex-markdown.html#code-chunk-options",
    "title": "LaTeX and Markdown",
    "section": "Code Chunk Options",
    "text": "Code Chunk Options\nCommon chunk options:\n\neval = (T/F): whether the code is evaluated by R\ninclude = (T/F): should code or output from the code be included in the document?\necho = (T/F): should code be printed in the document, or just the output?\nfig.width, fig.height =: size of the saved image, in inches\nout.width =: width of the output image IN THE DOCUMENT\nfig.cap =: Set a figure caption\ncache = (T/F): Cache the chunk, so that it is only re-run if it changes?\n\nAll of these chunk options also work in rmarkdown"
  },
  {
    "objectID": "slides/10a-latex-markdown.html#try-it-out-2",
    "href": "slides/10a-latex-markdown.html#try-it-out-2",
    "title": "LaTeX and Markdown",
    "section": "Try it out!",
    "text": "Try it out!\nTurn your .tex file into an .Rnw file and add some more stuff!\n\nAdd a histogram of 100 draws from a normal distribution\n\n\nCompute the mean of 15 draws from a binomial(10, .5) distribution and print it inline using \\Sexpr{}\n\n\nUse knitr::kable() to print out the first 6 rows of the cars dataframe."
  },
  {
    "objectID": "slides/10a-latex-markdown.html#table-upgrades",
    "href": "slides/10a-latex-markdown.html#table-upgrades",
    "title": "LaTeX and Markdown",
    "section": "Table Upgrades",
    "text": "Table Upgrades\nTable Packages\n\nkableExtra\nflextable\nhuxtable\ngt\nexpss\n\nOther packages\n\n(for HTML) papaja - use APA formatting throughout the whole html document"
  },
  {
    "objectID": "slides/10a-latex-markdown.html#special-document-types",
    "href": "slides/10a-latex-markdown.html#special-document-types",
    "title": "LaTeX and Markdown",
    "section": "Special Document Types",
    "text": "Special Document Types\nBoth LaTeX and quarto/Rmarkdown make use of other libraries to expand the types of documents available.\n\n\n\nDocument Type\nLibrary\nCompiler\nEnd Result\n\n\n\n\n\nSlides\nBeamer\nLaTeX or Markdown + LaTeX\nPDF\n\n\n\n \nReveal.js\nMarkdown\nHTML\n\n\n\n \nIOSlides\nMarkdown\nHTML\n\n\n\n \nSlidy\nMarkdown\nHTML\n\n\n\n \nPowerPoint\nMarkdown\nPowerPoint\n\n\n\n \nXaringan\nMarkdown + JS\nHTML/markdown hybrid\n\n\n\nPoster\nBeamer\nLaTeX\nPDF\n\n\n\n \nPosterdown\nMarkdown\nHTML\n\n\n\n \nPagedown\nMarkdown\nHTML\n\n\n\n\nThese documents use the same basic markdown or LaTeX syntax, but render differently."
  },
  {
    "objectID": "slides/09a-debugging-exercise.html",
    "href": "slides/09a-debugging-exercise.html",
    "title": "Debugging Excercises",
    "section": "",
    "text": "In the following examples, evaluate each problem using the criteria of a minimal reproducible example from this StackOverflow post.\nSpecifically, address the following things:\n\nAre the question and problem description complete?\nIs the issue reproducible? Does it have a description of the problem, with code that reproduces the problem? What could improve it?\nIs the example minimal? Does it include extra code or information that is not necessary?\nDoes the question describe any attempted solutions?\n\nThen, using what you know about R and Python, try to debug the problem using the strategies in the debugging chapter. Once you are thoroughly stumped, or you believe you have solved the problem, compare your solutions to those given on StackOverflow using the link.\n\nWhy Doesn’t this R function work?\n\nI created the following function to append new strings on a vector of strings called “meals”. However, when I use this function to append an string input into my “meals” vector, it does not work.\n\n add &lt;- function(str) {\n      meals &lt;- append(meals, as.character(str))  \n    }\nLink to original SO post.\n\n\nFunction not working R\n\nI’ve never programmed before and am trying to learn. I’m following that “coursera” course that I’ve seen other people post about — a course offered by Johns Hopkins on R programming.\n\n\nAnyway, this was supposed to be my first function. Yet, it doesn’t work! But when I type out all the steps individually, it runs just fine… Can anyone tell me why?\n\npollutantmean &lt;- function(directory, pollutant, id = 1:332){\n    x&lt;- list.files(\"/Users/mike******/Desktop/directory\", full.names=TRUE)\n    y&lt;- lapply(x, read.csv)\n    z&lt;- do.call(rbind.data.frame, y[id])\n\n    mean(z$pollutant, na.rm=TRUE)\n}\npollutantmean(specdata,nitrate,1:10)\n[1] NA\nWarning message:\nIn mean.default(z$pollutant, na.rm = TRUE) :\n  argument is not numeric or logical: returning NA\n\n####\n\nx&lt;- list.files(\"/Users/mike******/Desktop/specdata\",full.names=TRUE)\ny&lt;- lapply(x,read.csv)\nz&lt;- do.call(rbind.data.frame,y[1:10])\nmean(z$nitrate,na.rm=TRUE)\n[1] 0.7976266\nLink\n\n\nInexplicable error when trying to export my R notebook\n\nGetting this error from R Markdown when trying to export my .RMD\n\n\"Error in filter(Gastropods, Species == \"Cellana\") :  object 'Species' not found Calls: &lt;Anonymous&gt; ... withCallingHandlers -&gt; withVisible -&gt; eval -&gt; eval -&gt; filter\"\n\nHowever, all my plots are coming out successfully. I can clearly see in the data that the species column is there and that Cellana is a species. No spelling errors or anything.\n\n\nMy first 20 or so lines of code are below (between the ### symbols)\n\n\n\n###\n---\ntitle: \" Lab Report 2 - z5016113\"\noutput: html_notebook\ni---\n\n#1. Gastropod abundance vs. height on the shore\n\n```{r}\nGastropods &lt;- read.csv(file = \"MaroubraZones.csv\", header = TRUE)\nlibrary(ggplot2, dplyr)\n```\n\n```{r}\nGastropods$Zone &lt;- factor(Gastropods$Zone, levels = c(\"Low\", \"Mid\", \"High\"))\n```\n\n```{r}\nCellana &lt;- filter(Gastropods, Species == \"Cellana\")  ------&gt; This line is causing the error\n```\n\n```{r}\nggplot(Cellana, aes(Zone, Abundance)) + geom_boxplot()\n```\n###\n\n\nYou can find this sample file here\nLink\n\n\nPython if elif else statement\n\nI’m trying to create a program with python that calculate the cost for shipping.\n\n\nHowever, I can’t run the program to where it works properly.\n\n\nWhat ever my total is the same amount comes out as $6 for US and $8 for Canada. I can’t seem to get pass that.\n\n\nExample:\n\ntotal = raw_input('What is the total amount for your online shopping?')\ncountry = raw_input('Shipping within the US or Canada?')\n\nif country == \"US\":\n    if total &lt;= \"50\":\n        print \"Shipping Costs $6.00\"\n    elif total &lt;= \"100\":\n            print \"Shipping Costs $9.00\"\n    elif total &lt;= \"150\":\n            print \"Shipping Costs $12.00\"\n    else:\n        print \"FREE\"\n\nif country == \"Canada\":\n    if total &lt;= \"50\":\n        print \"Shipping Costs $8.00\"\n    elif total &lt;= \"100\":\n        print \"Shipping Costs $12.00\"\n    elif total &lt;= \"150\":\n        print \"Shipping Costs $15.00\"\n    else:\n        print \"FREE\"\nLink"
  },
  {
    "objectID": "slides/07-murder.html#this-weeks-big-picture-goal",
    "href": "slides/07-murder.html#this-weeks-big-picture-goal",
    "title": "Murder in SQL City",
    "section": "This week’s big picture goal:",
    "text": "This week’s big picture goal:\nWorking with data filters, joining data"
  },
  {
    "objectID": "slides/07-murder.html#todays-goals",
    "href": "slides/07-murder.html#todays-goals",
    "title": "Murder in SQL City",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\n\nIn Canvas, follow the Github Classroom link to Homework 7\nClone the repo for Homework 7 to your local machine\nMake sure that you are able to render index.qmd\nYou might have to install the package RSQLite\n\nStart solving the murder … by … ahem, finding that crime report."
  },
  {
    "objectID": "slides/07-murder.html#resources",
    "href": "slides/07-murder.html#resources",
    "title": "Murder in SQL City",
    "section": "Resources",
    "text": "Resources\n\nR cheat sheet\npython cheat sheet"
  },
  {
    "objectID": "slides/06-data-wrangling.html#this-weeks-big-picture-goal",
    "href": "slides/06-data-wrangling.html#this-weeks-big-picture-goal",
    "title": "Wrangling Data",
    "section": "This week’s big picture goal:",
    "text": "This week’s big picture goal:\nWorking with text and practicing exploration skills"
  },
  {
    "objectID": "slides/06-data-wrangling.html#organization",
    "href": "slides/06-data-wrangling.html#organization",
    "title": "Wrangling Data",
    "section": "Organization",
    "text": "Organization\n\nauthorization: usethis::create_github_token()\nwhich files to push? any original files!"
  },
  {
    "objectID": "slides/06-data-wrangling.html#todays-goals",
    "href": "slides/06-data-wrangling.html#todays-goals",
    "title": "Wrangling Data",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\n\nIn Canvas, follow the Github Classroom link to Homework 6\nClone the repo for Homework 6 to your local machine\nMake sure that you are able to render index.qmd\nStart wrangling these poems!\n\nTry to get past checkpoints 1 and 2 for both python and R, so you can focus on the exploration on Thursday"
  },
  {
    "objectID": "slides/06-data-wrangling.html#helpful-functions",
    "href": "slides/06-data-wrangling.html#helpful-functions",
    "title": "Wrangling Data",
    "section": "Helpful functions",
    "text": "Helpful functions\n\nin R: separate_longer_delim, str_count (make sure to check ?boundary()),\nin python: str.split, str.count, explode"
  },
  {
    "objectID": "slides/06-data-wrangling.html#resources",
    "href": "slides/06-data-wrangling.html#resources",
    "title": "Wrangling Data",
    "section": "Resources",
    "text": "Resources\n\nR cheat sheet\npython cheat sheet"
  },
  {
    "objectID": "slides/04-case-studies.html#organization",
    "href": "slides/04-case-studies.html#organization",
    "title": "Case Studies",
    "section": "Organization",
    "text": "Organization\n\nHeads-up: watch 1h video before next class: tidy tuesday screencast"
  },
  {
    "objectID": "slides/04-case-studies.html#this-weeks-big-picture-goal",
    "href": "slides/04-case-studies.html#this-weeks-big-picture-goal",
    "title": "Case Studies",
    "section": "This week’s big picture goal:",
    "text": "This week’s big picture goal:\nConsolidate your knowledge\nChapter 15\nPractice! Practice! Practice!"
  },
  {
    "objectID": "slides/04-case-studies.html#todays-goals",
    "href": "slides/04-case-studies.html#todays-goals",
    "title": "Case Studies",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\n\nClone the repo for Homework 4\nMake sure that you are able to render index.qmd\n\nyou might have to install some packages (R package curl, python package plotnine)\n\nRead actively through the examples in Chapter 15\n\nload the data from the homework into an R session\nadapt (if possible) the commands from the examples to the homework data"
  },
  {
    "objectID": "slides/04-case-studies.html#resources",
    "href": "slides/04-case-studies.html#resources",
    "title": "Case Studies",
    "section": "Resources",
    "text": "Resources\n\nR cheat sheet\npython cheat sheet"
  },
  {
    "objectID": "slides/04-case-studies.html#next-class",
    "href": "slides/04-case-studies.html#next-class",
    "title": "Case Studies",
    "section": "Next class",
    "text": "Next class\n\nPlanning out code"
  },
  {
    "objectID": "slides/03a-fizzing-and-buzzing.html#this-weeks-big-picture-goal",
    "href": "slides/03a-fizzing-and-buzzing.html#this-weeks-big-picture-goal",
    "title": "Fizzing and Buzzing",
    "section": "This week’s big picture goal:",
    "text": "This week’s big picture goal:\nGoing from using functions to writing the first functions"
  },
  {
    "objectID": "slides/03a-fizzing-and-buzzing.html#todays-goals",
    "href": "slides/03a-fizzing-and-buzzing.html#todays-goals",
    "title": "Fizzing and Buzzing",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\nUnderstand\n\nDistinguish and recognize data structures\nUse Control structures - if/else and for loops"
  },
  {
    "objectID": "slides/03a-fizzing-and-buzzing.html#todays-goals-1",
    "href": "slides/03a-fizzing-and-buzzing.html#todays-goals-1",
    "title": "Fizzing and Buzzing",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\nDo\n\nHomework 3 – read carefully, work step by step from top to bottom"
  },
  {
    "objectID": "slides/03a-fizzing-and-buzzing.html#todays-goals-2",
    "href": "slides/03a-fizzing-and-buzzing.html#todays-goals-2",
    "title": "Fizzing and Buzzing",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\nRead Up On\n\nControl Structures, program flows\nWriting Functions"
  },
  {
    "objectID": "slides/03a-fizzing-and-buzzing.html#resources",
    "href": "slides/03a-fizzing-and-buzzing.html#resources",
    "title": "Fizzing and Buzzing",
    "section": "Resources",
    "text": "Resources\n\nR cheat sheet\npython cheat sheet"
  },
  {
    "objectID": "slides/03a-fizzing-and-buzzing.html#next-class",
    "href": "slides/03a-fizzing-and-buzzing.html#next-class",
    "title": "Fizzing and Buzzing",
    "section": "Next class",
    "text": "Next class\n\nFunction writing in R and Python"
  },
  {
    "objectID": "slides/02b-Finding-Your-Way.html#todays-goals",
    "href": "slides/02b-Finding-Your-Way.html#todays-goals",
    "title": "Finding your way in R and Python",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\nUnderstand\n\nBasic Data Types\nCreating Variables\nUsing R/Python as a calculator\n\nPractice working with errors\n\nIntro to Debugging"
  },
  {
    "objectID": "slides/02b-Finding-Your-Way.html#work-on-the-homework",
    "href": "slides/02b-Finding-Your-Way.html#work-on-the-homework",
    "title": "Finding your way in R and Python",
    "section": "Work on the homework!",
    "text": "Work on the homework!"
  },
  {
    "objectID": "slides/02b-Finding-Your-Way.html#next-class",
    "href": "slides/02b-Finding-Your-Way.html#next-class",
    "title": "Finding your way in R and Python",
    "section": "Next class",
    "text": "Next class\n\nData structures: vectors, lists, arrays, …\nArithmetic operators for matrices\nFunction writing in R and Python"
  },
  {
    "objectID": "slides/01b-intro.html#goals-for-today",
    "href": "slides/01b-intro.html#goals-for-today",
    "title": "Stat 850: Git and Github",
    "section": "Goals for Today",
    "text": "Goals for Today\n\nSet up Git (Chapter 5 of the textbook)\nHow to submit homework with Github Classroom\nGit concepts: Push/Pull"
  },
  {
    "objectID": "slides/01b-intro.html#preview-next-week",
    "href": "slides/01b-intro.html#preview-next-week",
    "title": "Stat 850: Git and Github",
    "section": "Preview: Next Week",
    "text": "Preview: Next Week\n\nFinding your way in R and Python\n\nNavigating RStudio\nExecution modes: script, console, interactive\nPython vs. R code\n\nIntroduction to Programming"
  },
  {
    "objectID": "slides/01b-intro.html#reminders",
    "href": "slides/01b-intro.html#reminders",
    "title": "Stat 850: Git and Github",
    "section": "Reminders",
    "text": "Reminders\n\nHomework due Friday\nRead the assigned chapters in the textbook for class next week!"
  },
  {
    "objectID": "homework/13.html",
    "href": "homework/13.html",
    "title": "Homework 13: Shiny",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom."
  },
  {
    "objectID": "homework/11.html",
    "href": "homework/11.html",
    "title": "Homework 11: Simulation",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom."
  },
  {
    "objectID": "homework/08.html",
    "href": "homework/08.html",
    "title": "Homework: Data Visualization",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom."
  },
  {
    "objectID": "homework/08.html#instructions",
    "href": "homework/08.html#instructions",
    "title": "Homework: Data Visualization",
    "section": "Instructions",
    "text": "Instructions\n\nOnce you have finished this assignment, render the document (Ctrl/Cmd-Shift-K or the Render button).\nCommit the qmd file and any other files you have changed to the repository and push your changes.\nIn Canvas, submit a link to your github repository containing the updated files."
  },
  {
    "objectID": "homework/08.html#swiss-banknotes",
    "href": "homework/08.html#swiss-banknotes",
    "title": "Homework: Data Visualization",
    "section": "Swiss Banknotes",
    "text": "Swiss Banknotes\nThe R package mclust contains a data set called banknote, consisting of (physical) measurements on 200 Swiss bank notes, 100 of which are genuine, while the other half is counterfeit. I’ve saved this data as banknote.csv in this repository.\n\nUse one of the object inspecting functions and describe the data set - what do the variables appear to mean?\n\nHint: You can read about the dataset by running library(mclust) and then ?banknote - this will provide some additional context.\n\nDraw a barchart of Status. Also, map status to the fill color of the bars. (Yes, this plot is a bit simplistic, but what does it show?)\nDelete this ordered list and write something that includes the following details\n\nwhat type of plot is it?\nWhich variables are mapped to x, to y, and to the (fill) color?\nWhat is the main message of the plot: what is your main finding, i.e. what do you want viewers to learn from the plot?\nAre there any anomalies or outliers?\n\nDraw a histogram of one of the variables in the dataset that shows a distinction between genuine and counterfeit banknotes. Use fill color to show this difference. Choose the binwidth such that there are no gaps in the middle range of the histogram.\nDelete this ordered list and write something that includes the following details\n\nwhat type of plot is it?\nWhich variables are mapped to x, to y, and to the (fill) color?\nWhat is the main message of the plot: what is your main finding, i.e. what do you want viewers to learn from the plot?\nAre there any anomalies or outliers?\n\nDraw a scatterplot of two (continuous) measurements, color by whether the banknote is genuine or fake. Try to find a pair of measurements that provides as much separation as possible between the clusters of points for genuine and counterfeit banknotes.\nDelete this ordered list and write something that includes the following details\n\nwhat type of plot is it?\nWhich variables are mapped to x, to y, and to the (fill) color?\nWhat is the main message of the plot: what is your main finding, i.e. what do you want viewers to learn from the plot?\nAre there any anomalies or outliers?"
  },
  {
    "objectID": "homework/08.html#take-everything-you-know-and-use-it-for-evil",
    "href": "homework/08.html#take-everything-you-know-and-use-it-for-evil",
    "title": "Homework: Data Visualization",
    "section": "Take everything you know, and use it for evil",
    "text": "Take everything you know, and use it for evil\nThe textbook spent lots of time showing you how to create different types of graphics, but I spent a lot less time showing you all of the different ways you could customize graphics in any plotting library. In this problem, I want you to create the ugliest graphs you can, and then explain why, exactly, you made the decisions you did, and which principles of good graphics you’ve intentionally violated.\nUgliness is subjective, so the goal here is for you to explore the different ways you can customize the finer details of a plot.\nRequirements: - Your finished masterpiece must have appropriate axis labels and a title (after all, even ugly plots need to be correctly labeled!). - Your ugliness should not depend solely on color choices - there are many other ways to make things ugly!\nYou are free to add additional variables and layers, modify the aesthetics used, and leverage other packages. If you use packages I haven’t used in the book, please provide (commented out) installation code in your code chunks so that I know where the package is from (this is especially important if it’s from GitHub and not CRAN or pip).\nIf you need inspiration, look here.\nUse the palmerpenguins data, which has been exported into penguins.csv\nCreate the ugliest graph you can manage with each language. You can pick which variables to plot, what type of chart to make, and what aesthetic mappings to use.\n\nPart 1: R\nDelete this line and explain why your graph is ugly - what principles of good graphics have you violated?\n\n\nPart 2: Python\nDelete this line and explain why your graph is ugly - what principles of good graphics have you violated?"
  },
  {
    "objectID": "homework/08.html#useful-references",
    "href": "homework/08.html#useful-references",
    "title": "Homework: Data Visualization",
    "section": "Useful References",
    "text": "Useful References\n\nCustomizing ggplot2 graphics\nCustomizing Seaborn graphics\nA group-created slideshow of awful graphics"
  },
  {
    "objectID": "homework/06.html",
    "href": "homework/06.html",
    "title": "String Processing and Data Wrangling in R and Python",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom."
  },
  {
    "objectID": "homework/06.html#content-warning",
    "href": "homework/06.html#content-warning",
    "title": "String Processing and Data Wrangling in R and Python",
    "section": "Content Warning",
    "text": "Content Warning\nThese poems may address adult topics and/or use strong or vulgar language, as they are taken from Reddit. I have not censored them in any way because I want you to work with data that is realistic. You should find a few test cases which you are comfortable with to use to test out your code, but you do not need to read all of the poems (and in both cases, I’ve provided you with approximately 1000 samples, so it’s probably too much to read in any case).\nHere are 5 indices (counting from 1) which are approximately G or PG in content for each poet, using the most recent snapshot CSV (20230806):\n\nSprog poems: 1, 2, 3, 6, 7\nSchnoodleDoodleDo poems: 1, 2, 3, 4, 5\n\nThese should be sufficient for you to test your code even if you are worried about being exposed to adult themes or language during this activity."
  },
  {
    "objectID": "homework/06.html#splitting-poems-into-lines",
    "href": "homework/06.html#splitting-poems-into-lines",
    "title": "String Processing and Data Wrangling in R and Python",
    "section": "Splitting Poems into Lines",
    "text": "Splitting Poems into Lines\nSplit the poem into lines and create a data frame that has\n\na new column called poem_id, numbered from one to the total number of poems by the poet in question\na new variable called line that contains the text of each line of the poem (one row per poem line). To get this, you may need to split the comment string by the endline character (\\n) and then unnest or expand your data frame.\na new variable called line_no that contains the line number of the poem. This should be computed per poem.\n\nEnsure that you are splitting lines by a string which makes sense. Some poems have multiple paragraphs (stanzas) and may have a blank line in between; you want to preserve this blank line as it will help you make sense of the poem. Some poems instead have blank lines between every line of the poem; in these cases, you may want to split by e.g. \\n\\n instead of \\n.\nSee Part 1 Checkpoint for an example of what the output should look like from each poet."
  },
  {
    "objectID": "homework/06.html#summarizing-poems",
    "href": "homework/06.html#summarizing-poems",
    "title": "String Processing and Data Wrangling in R and Python",
    "section": "Summarizing Poems",
    "text": "Summarizing Poems\nFor each poem, create a summary data frame that contains:\n\nAverage number of words per line in the poem\nNumber of lines in the poem\nNumber of characters which are not letters or spaces (punctuation, numbers, and any non-ASCII characters)\nNumber of uppercase letters in the poem\nNumber of lowercase letters in the poem\n\nCreate a plot showing the distribution of the number of words per line across all poems you have in your dataset. Create another plot showing the number of lines in the poem for all poems in your dataset. What does this tell you about the “average” style of the poet in question?\nSee Part 2 Checkpoint for an example of what the output should look like from each poet."
  },
  {
    "objectID": "homework/06.html#poetry-analysis",
    "href": "homework/06.html#poetry-analysis",
    "title": "String Processing and Data Wrangling in R and Python",
    "section": "Poetry Analysis",
    "text": "Poetry Analysis\nChoose some characteristic(s) of the poet’s style to explore graphically. If necessary, create a subset of the data with poems relevant to your question before you generate numerical summaries. You may want to clean up the data and remove lines which contain quotes (e.g. start with a &gt; character) or horizontal lines in reddit markdown (e.g. only have ----).\nSome ideas to get you started thinking:\n\nNumber of syllables per line may be used to infer rhyming scheme and/or poetry style. You can use the qdap package in R, which contains the syllable_sum function to count the number of syllables in a sentence. You may need to use a for-loop or program a custom function to use the syllables function on every entry in your data frame column.\nUse of non-alphabetic characters. Schnoodle often uses emoji and other text annotations to convey emotions and excitement - how often do these types of annotations appear in their poems?\nCommon characters and phrases. Sprog writes poems frequently about a character named Timmy (who often meets a horrible end). Do these poems have a common format/style/rhyme scheme?\nSprog often writes longer poems with multiple stanzas. Identify which poems have multiple stanzas (Hint, look for blank lines in a systematic pattern) and show the distribution of stanza length, stanza variation within poems, and number of stanzas in each poem.\nSchnoodle often misspells words intentionally (using e.g. fren instead of friend) to convey that they are writing using an animal’s voice. What proportion of words are misspelled in each poem? How much does this proportion vary? Based on the distribution, how likely is it, in your opinion, that Schnoodle misspells words more often when speaking as one type of animal than another? You can use the hunspell package in R to detect whether words are likely misspelled."
  },
  {
    "objectID": "homework/06.html#splitting-poems-into-lines-1",
    "href": "homework/06.html#splitting-poems-into-lines-1",
    "title": "String Processing and Data Wrangling in R and Python",
    "section": "Splitting Poems into Lines",
    "text": "Splitting Poems into Lines\nSplit the poem into lines and create a data frame that has\n\na new column called poem_id, numbered from one to the total number of poems by the poet in question\na new variable called line that contains the text of each line of the poem (one row per poem line). To get this, you may need to split the comment string by the endline character (\\n) and then unnest or expand your data frame.\na new variable called line_no that contains the line number of the poem. This should be computed per poem.\n\nEnsure that you are splitting lines by a string which makes sense. Some poems have multiple paragraphs (stanzas) and may have a blank line in between; you want to preserve this blank line as it will help you make sense of the poem. Some poems instead have blank lines between every line of the poem; in these cases, you may want to split by e.g. \\n\\n instead of \\n. See Part 1 Checkpoint for an example of what the output should look like from each poet."
  },
  {
    "objectID": "homework/06.html#summarizing-poems-1",
    "href": "homework/06.html#summarizing-poems-1",
    "title": "String Processing and Data Wrangling in R and Python",
    "section": "Summarizing Poems",
    "text": "Summarizing Poems\nFor each poem, create a summary data frame that contains:\n\nAverage number of words per line in the poem\nNumber of lines in the poem\nNumber of characters which are not letters or spaces (punctuation, numbers, and any non-ASCII characters)\nNumber of uppercase letters in the poem\nNumber of lowercase letters in the poem\n\nCreate a plot showing the distribution of the number of words per line across all poems you have in your dataset. Create another plot showing the number of lines in the poem for all poems in your dataset. What does this tell you about the “average” style of the poet in question?"
  },
  {
    "objectID": "homework/06.html#poetry-analysis-1",
    "href": "homework/06.html#poetry-analysis-1",
    "title": "String Processing and Data Wrangling in R and Python",
    "section": "Poetry Analysis",
    "text": "Poetry Analysis\nChoose some characteristic(s) of the poet’s style to explore graphically. If necessary, create a subset of the data with poems relevant to your question before you generate numerical summaries. You may want to clean up the data and remove lines which contain quotes (e.g. start with a &gt; character) or horizontal lines in reddit markdown (e.g. only have ----).\nSome ideas to get you started thinking:\n\nNumber of syllables per line may be used to infer rhyming scheme and/or poetry style. You can use the syllables python package. You may need to use a for-loop or program a custom function to use the syllables function on every entry in your data frame column.\nUse of non-alphabetic characters. Schnoodle often uses emoji and other text annotations to convey emotions and excitement - how often do these types of annotations appear in their poems?\nCommon characters and phrases. Sprog writes poems frequently about a character named Timmy (who often meets a horrible end). Do these poems have a common format/style/rhyme scheme?\nSprog often writes longer poems with multiple stanzas. Identify which poems have multiple stanzas (Hint, look for blank lines in a systematic pattern) and show the distribution of stanza length, stanza variation within poems, and number of stanzas in each poem.\nSchnoodle often misspells words intentionally (using e.g. fren instead of friend) to convey that they are writing using an animal’s voice. What proportion of words are misspelled in each poem? How much does this proportion vary? Based on the distribution, how likely is it, in your opinion, that Schnoodle misspells words more often when speaking as one type of animal than another? You can use one of the python packages discussed in this post to detect whether words are likely misspelled."
  },
  {
    "objectID": "homework/04.html",
    "href": "homework/04.html",
    "title": "Homework: Data Programming",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom.\nInstructions:"
  },
  {
    "objectID": "homework/04.html#r",
    "href": "homework/04.html#r",
    "title": "Homework: Data Programming",
    "section": "R",
    "text": "R\n\nmonth.name is a built-in vector containing month names that you can use to create a factor variable. Factor variables can be easily converted into numeric variables. This might help you get a numeric month, which might help you get to a fractional year.\nsubset() is a function that will subset a data frame based on a logical condition. It might be easier to use than logical indexing (though you can use either). You can also use the filter function in the dplyr package.\nTo get a line graph in ggplot2, use geom_line(). Using aes(color = varname) will color the lines by variable name.\nSome sample code to make a line graph in ggplot is provided below:\n\n\nlibrary(dplyr)\n# Get only January months so that there's one point a year\njan_data &lt;- subset(games, month == \"January\")\n\n# x axis is year, y axis is average players\n# group = gamename says draw one line for each game\nggplot(data = jan_data, \n       aes(x = year, y = avg, group = gamename)) + \n  geom_line()"
  },
  {
    "objectID": "homework/04.html#python",
    "href": "homework/04.html#python",
    "title": "Homework: Data Programming",
    "section": "Python",
    "text": "Python\n\nThe time module contains the strptime function, which may help you to get from month name to month number.\nPandas will let you sort a data frame in decreasing order of variable x using sort_values('x', ascending = False)\nYou can select rows of a python data frame that match a list using .isin() demo. Alternately, Pandas data frames have a method df.query() that allows you to pass a logical condition and select rows based on that. This may be easier to use than logical indexing (though you can use either).\nUsing the .assign() function to create new variables will reduce the number of errors you run into.\nTo get a line graph in plotnine, which is a clone of ggplot2 for python, use geom_line(). Using aes(color = 'varname') will color the lines by variable name. Some sample code to make a line graph in ggplot is provided below:\n\n\n# Get only January months so that there's one point a year\njan_data = games.query('month == \"January\"')\n\n# x axis is year, y axis is average players\n# group = gamename says draw one line for each game\n(\n  ggplot(jan_data, \n       aes(x = 'year', y = 'avg', group = 'gamename')) + \n  geom_line()\n)\n\n&lt;plotnine.ggplot.ggplot object at 0x7f31ca1eef10&gt;"
  },
  {
    "objectID": "homework/02.html",
    "href": "homework/02.html",
    "title": "Homework: Finding Your Way in R and Python",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom.\nInstructions: Once you have finished this assignment, render the document (Ctrl/Cmd-Shift-K or the Render button). Commit the qmd file and any other files you have changed to the repository and push your changes.\nIn Canvas, submit a link to your github repository containing the updated files.\nNote: Submitting your link in Canvas lets me know that you are ready for me to grade your homework. You can commit half-finished or not-working homework to GitHub, and it is good practice to commit frequently (at least at the end of each work session)."
  },
  {
    "objectID": "homework/02.html#pythagorean-theorem-in-r",
    "href": "homework/02.html#pythagorean-theorem-in-r",
    "title": "Homework: Finding Your Way in R and Python",
    "section": "Pythagorean Theorem in R",
    "text": "Pythagorean Theorem in R\n\\[a^2 + b^2 = c^2\\]\nUse the chunk below to define variables \\(a\\), \\(b\\), and \\(c\\), where you define values (of your choice) for \\(a\\) and \\(b\\). Based on the choice of \\(a\\) and \\(b\\), determine \\(c\\) using the mathematical formula. You may need to find the square root function in R to make this work.\n\n# Your pythagorean theorem code goes here"
  },
  {
    "objectID": "homework/02.html#quadratic-formula-in-python",
    "href": "homework/02.html#quadratic-formula-in-python",
    "title": "Homework: Finding Your Way in R and Python",
    "section": "Quadratic Formula in Python",
    "text": "Quadratic Formula in Python\n\\[x = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}\\]\nUse the chunk below to define variables \\(a\\), \\(b\\), and \\(c\\), and then define \\(x1\\) and \\(x2\\), the possible values for \\(x\\). You may find it helpful to define a few additional variables, such as the value of the discriminant \\(\\sqrt{b^2 - 4ac}\\), to make it easier to calculate the results.\n\n# Your quadratic formula code goes here"
  },
  {
    "objectID": "homework-templates/08/index.html",
    "href": "homework-templates/08/index.html",
    "title": "Homework: Data Visualization",
    "section": "",
    "text": "Once you have finished this assignment, render the document (Ctrl/Cmd-Shift-K or the Render button).\nCommit the qmd file and any other files you have changed to the repository and push your changes.\nIn Canvas, submit a link to your github repository containing the updated files."
  },
  {
    "objectID": "homework-templates/08/index.html#instructions",
    "href": "homework-templates/08/index.html#instructions",
    "title": "Homework: Data Visualization",
    "section": "",
    "text": "Once you have finished this assignment, render the document (Ctrl/Cmd-Shift-K or the Render button).\nCommit the qmd file and any other files you have changed to the repository and push your changes.\nIn Canvas, submit a link to your github repository containing the updated files."
  },
  {
    "objectID": "homework-templates/08/index.html#swiss-banknotes",
    "href": "homework-templates/08/index.html#swiss-banknotes",
    "title": "Homework: Data Visualization",
    "section": "Swiss Banknotes",
    "text": "Swiss Banknotes\nThe R package mclust contains a data set called banknote, consisting of (physical) measurements on 200 Swiss bank notes, 100 of which are genuine, while the other half is counterfeit. I’ve saved this data as banknote.csv in this repository.\n\nUse one of the object inspecting functions and describe the data set - what do the variables appear to mean?\n\nHint: You can read about the dataset by running library(mclust) and then ?banknote - this will provide some additional context.\n\nDraw a barchart of Status. Also, map status to the fill color of the bars. (Yes, this plot is a bit simplistic, but what does it show?)\nDelete this ordered list and write something that includes the following details\n\nwhat type of plot is it?\nWhich variables are mapped to x, to y, and to the (fill) color?\nWhat is the main message of the plot: what is your main finding, i.e. what do you want viewers to learn from the plot?\nAre there any anomalies or outliers?\n\nDraw a histogram of one of the variables in the dataset that shows a distinction between genuine and counterfeit banknotes. Use fill color to show this difference. Choose the binwidth such that there are no gaps in the middle range of the histogram.\nDelete this ordered list and write something that includes the following details\n\nwhat type of plot is it?\nWhich variables are mapped to x, to y, and to the (fill) color?\nWhat is the main message of the plot: what is your main finding, i.e. what do you want viewers to learn from the plot?\nAre there any anomalies or outliers?\n\nDraw a scatterplot of two (continuous) measurements, color by whether the banknote is genuine or fake. Try to find a pair of measurements that provides as much separation as possible between the clusters of points for genuine and counterfeit banknotes.\nDelete this ordered list and write something that includes the following details\n\nwhat type of plot is it?\nWhich variables are mapped to x, to y, and to the (fill) color?\nWhat is the main message of the plot: what is your main finding, i.e. what do you want viewers to learn from the plot?\nAre there any anomalies or outliers?"
  },
  {
    "objectID": "homework-templates/08/index.html#take-everything-you-know-and-use-it-for-evil",
    "href": "homework-templates/08/index.html#take-everything-you-know-and-use-it-for-evil",
    "title": "Homework: Data Visualization",
    "section": "Take everything you know, and use it for evil",
    "text": "Take everything you know, and use it for evil\nThe textbook spent lots of time showing you how to create different types of graphics, but I spent a lot less time showing you all of the different ways you could customize graphics in any plotting library. In this problem, I want you to create the ugliest graphs you can, and then explain why, exactly, you made the decisions you did, and which principles of good graphics you’ve intentionally violated.\nUgliness is subjective, so the goal here is for you to explore the different ways you can customize the finer details of a plot.\nRequirements: - Your finished masterpiece must have appropriate axis labels and a title (after all, even ugly plots need to be correctly labeled!). - Your ugliness should not depend solely on color choices - there are many other ways to make things ugly!\nYou are free to add additional variables and layers, modify the aesthetics used, and leverage other packages. If you use packages I haven’t used in the book, please provide (commented out) installation code in your code chunks so that I know where the package is from (this is especially important if it’s from GitHub and not CRAN or pip).\nIf you need inspiration, look here.\nUse the palmerpenguins data, which has been exported into penguins.csv\nCreate the ugliest graph you can manage with each language. You can pick which variables to plot, what type of chart to make, and what aesthetic mappings to use.\n\nPart 1: R\nDelete this line and explain why your graph is ugly - what principles of good graphics have you violated?\n\n\nPart 2: Python\nDelete this line and explain why your graph is ugly - what principles of good graphics have you violated?"
  },
  {
    "objectID": "homework-templates/08/index.html#useful-references",
    "href": "homework-templates/08/index.html#useful-references",
    "title": "Homework: Data Visualization",
    "section": "Useful References",
    "text": "Useful References\n\nCustomizing ggplot2 graphics\nCustomizing Seaborn graphics\nA group-created slideshow of awful graphics"
  },
  {
    "objectID": "homework-templates/06/index.html",
    "href": "homework-templates/06/index.html",
    "title": "String Processing and Data Wrangling in R and Python",
    "section": "",
    "text": "In this assignment, you will analyze poems written by two of Reddit’s famous poets: Poem_for_your_sprog and SchnoodleDoodleDo. These poems were scraped using the RedditExtractoR package on June 15, 2023. Code Note: This package no longer works because of changes to reddit’s API that became effective on July 1, 2023.\npoem_for_your_sprog writes poems in response to other people’s comments (‘sprog’ means child) on AskReddit posts. SchnoodleDoodleDo writes poems in response to comments and posts on subreddits that are usually related to cute or wholesome content, such as aww, WhatsWrongWithYourDog, wholesomememes, and more.\nYou can find the CSV files of each writer’s reddit comments in sprog_poems.csv and schnoodle_poems.csv, respectively. Historical versions of these CSVs are also saved in the repo for posterity’s sake, as a number of users left Reddit in June 2023 and deleted their accounts and/or comments.\nAs part of this analysis, you should learn how to do the following tasks:\n\nSplit a vector of strings into components (lines)\nCreate a new data frame with the components as a new variable\nReplace characters to clean up your data\nCompute basic numerical statistics on strings (word count, capitalization, use of punctuation and symbols, number of syllables, etc.)\nCombine this information to assess poetry styles\n\n\n\nThese poems may address adult topics and/or use strong or vulgar language, as they are taken from Reddit. I have not censored them in any way because I want you to work with data that is realistic. You should find a few test cases which you are comfortable with to use to test out your code, but you do not need to read all of the poems (and in both cases, I’ve provided you with approximately 1000 samples, so it’s probably too much to read in any case).\nHere are 5 indices (counting from 1) which are approximately G or PG in content for each poet, using the most recent snapshot CSV (20230806):\n\nSprog poems: 1, 2, 3, 6, 7\nSchnoodleDoodleDo poems: 1, 2, 3, 4, 5\n\nThese should be sufficient for you to test your code even if you are worried about being exposed to adult themes or language during this activity."
  },
  {
    "objectID": "homework-templates/06/index.html#content-warning",
    "href": "homework-templates/06/index.html#content-warning",
    "title": "String Processing and Data Wrangling in R and Python",
    "section": "",
    "text": "These poems may address adult topics and/or use strong or vulgar language, as they are taken from Reddit. I have not censored them in any way because I want you to work with data that is realistic. You should find a few test cases which you are comfortable with to use to test out your code, but you do not need to read all of the poems (and in both cases, I’ve provided you with approximately 1000 samples, so it’s probably too much to read in any case).\nHere are 5 indices (counting from 1) which are approximately G or PG in content for each poet, using the most recent snapshot CSV (20230806):\n\nSprog poems: 1, 2, 3, 6, 7\nSchnoodleDoodleDo poems: 1, 2, 3, 4, 5\n\nThese should be sufficient for you to test your code even if you are worried about being exposed to adult themes or language during this activity."
  },
  {
    "objectID": "homework-templates/06/index.html#splitting-poems-into-lines",
    "href": "homework-templates/06/index.html#splitting-poems-into-lines",
    "title": "String Processing and Data Wrangling in R and Python",
    "section": "Splitting Poems into Lines",
    "text": "Splitting Poems into Lines\nSplit the poem into lines and create a data frame that has\n\na new column called poem_id, numbered from one to the total number of poems by the poet in question\na new variable called line that contains the text of each line of the poem (one row per poem line). To get this, you may need to split the comment string by the endline character (\\n) and then unnest or expand your data frame.\na new variable called line_no that contains the line number of the poem. This should be computed per poem.\n\nEnsure that you are splitting lines by a string which makes sense. Some poems have multiple paragraphs (stanzas) and may have a blank line in between; you want to preserve this blank line as it will help you make sense of the poem. Some poems instead have blank lines between every line of the poem; in these cases, you may want to split by e.g. \\n\\n instead of \\n.\nSee Part 1 Checkpoint for an example of what the output should look like from each poet."
  },
  {
    "objectID": "homework-templates/06/index.html#summarizing-poems",
    "href": "homework-templates/06/index.html#summarizing-poems",
    "title": "String Processing and Data Wrangling in R and Python",
    "section": "Summarizing Poems",
    "text": "Summarizing Poems\nFor each poem, create a summary data frame that contains:\n\nAverage number of words per line in the poem\nNumber of lines in the poem\nNumber of characters which are not letters or spaces (punctuation, numbers, and any non-ASCII characters)\nNumber of uppercase letters in the poem\nNumber of lowercase letters in the poem\n\nCreate a plot showing the distribution of the number of words per line across all poems you have in your dataset. Create another plot showing the number of lines in the poem for all poems in your dataset. What does this tell you about the “average” style of the poet in question?\nSee Part 2 Checkpoint for an example of what the output should look like from each poet."
  },
  {
    "objectID": "homework-templates/06/index.html#poetry-analysis",
    "href": "homework-templates/06/index.html#poetry-analysis",
    "title": "String Processing and Data Wrangling in R and Python",
    "section": "Poetry Analysis",
    "text": "Poetry Analysis\nChoose some characteristic(s) of the poet’s style to explore graphically. If necessary, create a subset of the data with poems relevant to your question before you generate numerical summaries. You may want to clean up the data and remove lines which contain quotes (e.g. start with a &gt; character) or horizontal lines in reddit markdown (e.g. only have ----).\nSome ideas to get you started thinking:\n\nNumber of syllables per line may be used to infer rhyming scheme and/or poetry style. You can use the qdap package in R, which contains the syllable_sum function to count the number of syllables in a sentence. You may need to use a for-loop or program a custom function to use the syllables function on every entry in your data frame column.\nUse of non-alphabetic characters. Schnoodle often uses emoji and other text annotations to convey emotions and excitement - how often do these types of annotations appear in their poems?\nCommon characters and phrases. Sprog writes poems frequently about a character named Timmy (who often meets a horrible end). Do these poems have a common format/style/rhyme scheme?\nSprog often writes longer poems with multiple stanzas. Identify which poems have multiple stanzas (Hint, look for blank lines in a systematic pattern) and show the distribution of stanza length, stanza variation within poems, and number of stanzas in each poem.\nSchnoodle often misspells words intentionally (using e.g. fren instead of friend) to convey that they are writing using an animal’s voice. What proportion of words are misspelled in each poem? How much does this proportion vary? Based on the distribution, how likely is it, in your opinion, that Schnoodle misspells words more often when speaking as one type of animal than another? You can use the hunspell package in R to detect whether words are likely misspelled."
  },
  {
    "objectID": "homework-templates/06/index.html#splitting-poems-into-lines-1",
    "href": "homework-templates/06/index.html#splitting-poems-into-lines-1",
    "title": "String Processing and Data Wrangling in R and Python",
    "section": "Splitting Poems into Lines",
    "text": "Splitting Poems into Lines\nSplit the poem into lines and create a data frame that has\n\na new column called poem_id, numbered from one to the total number of poems by the poet in question\na new variable called line that contains the text of each line of the poem (one row per poem line). To get this, you may need to split the comment string by the endline character (\\n) and then unnest or expand your data frame.\na new variable called line_no that contains the line number of the poem. This should be computed per poem.\n\nEnsure that you are splitting lines by a string which makes sense. Some poems have multiple paragraphs (stanzas) and may have a blank line in between; you want to preserve this blank line as it will help you make sense of the poem. Some poems instead have blank lines between every line of the poem; in these cases, you may want to split by e.g. \\n\\n instead of \\n. See Part 1 Checkpoint for an example of what the output should look like from each poet."
  },
  {
    "objectID": "homework-templates/06/index.html#summarizing-poems-1",
    "href": "homework-templates/06/index.html#summarizing-poems-1",
    "title": "String Processing and Data Wrangling in R and Python",
    "section": "Summarizing Poems",
    "text": "Summarizing Poems\nFor each poem, create a summary data frame that contains:\n\nAverage number of words per line in the poem\nNumber of lines in the poem\nNumber of characters which are not letters or spaces (punctuation, numbers, and any non-ASCII characters)\nNumber of uppercase letters in the poem\nNumber of lowercase letters in the poem\n\nCreate a plot showing the distribution of the number of words per line across all poems you have in your dataset. Create another plot showing the number of lines in the poem for all poems in your dataset. What does this tell you about the “average” style of the poet in question?"
  },
  {
    "objectID": "homework-templates/06/index.html#poetry-analysis-1",
    "href": "homework-templates/06/index.html#poetry-analysis-1",
    "title": "String Processing and Data Wrangling in R and Python",
    "section": "Poetry Analysis",
    "text": "Poetry Analysis\nChoose some characteristic(s) of the poet’s style to explore graphically. If necessary, create a subset of the data with poems relevant to your question before you generate numerical summaries. You may want to clean up the data and remove lines which contain quotes (e.g. start with a &gt; character) or horizontal lines in reddit markdown (e.g. only have ----).\nSome ideas to get you started thinking:\n\nNumber of syllables per line may be used to infer rhyming scheme and/or poetry style. You can use the syllables python package. You may need to use a for-loop or program a custom function to use the syllables function on every entry in your data frame column.\nUse of non-alphabetic characters. Schnoodle often uses emoji and other text annotations to convey emotions and excitement - how often do these types of annotations appear in their poems?\nCommon characters and phrases. Sprog writes poems frequently about a character named Timmy (who often meets a horrible end). Do these poems have a common format/style/rhyme scheme?\nSprog often writes longer poems with multiple stanzas. Identify which poems have multiple stanzas (Hint, look for blank lines in a systematic pattern) and show the distribution of stanza length, stanza variation within poems, and number of stanzas in each poem.\nSchnoodle often misspells words intentionally (using e.g. fren instead of friend) to convey that they are writing using an animal’s voice. What proportion of words are misspelled in each poem? How much does this proportion vary? Based on the distribution, how likely is it, in your opinion, that Schnoodle misspells words more often when speaking as one type of animal than another? You can use one of the python packages discussed in this post to detect whether words are likely misspelled."
  },
  {
    "objectID": "homework-templates/05/index.html",
    "href": "homework-templates/05/index.html",
    "title": "Chocolate Chip Cookies",
    "section": "",
    "text": "First, read in the CSV data of cookie ingredients. Make sure that your end-result data has appropriate types for each column - these should match the types provided in the documentation in the README.md file."
  },
  {
    "objectID": "homework-templates/05/index.html#reading-in-the-data",
    "href": "homework-templates/05/index.html#reading-in-the-data",
    "title": "Chocolate Chip Cookies",
    "section": "",
    "text": "First, read in the CSV data of cookie ingredients. Make sure that your end-result data has appropriate types for each column - these should match the types provided in the documentation in the README.md file."
  },
  {
    "objectID": "homework-templates/05/index.html#exploratory-data-analysis",
    "href": "homework-templates/05/index.html#exploratory-data-analysis",
    "title": "Chocolate Chip Cookies",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\nExploratory data analysis is the process of getting familiar with your dataset. To get started, this blog post provides a nice checklist to get you thinking:\n\n\nWhat question(s) are you trying to solve (or prove wrong)?\nWhat kind of data do you have and how do you treat different types?\nWhat’s missing from the data and how do you deal with it?\nWhere are the outliers and why should you care about them?\nHow can you add, change or remove features to get more out of your data?\n\n\n\nGenerating Questions\nGenerate at least 5 questions you might explore using this database of cookie ingredients.\n\n\n\n\n\n\n\n\n\nSkimming the Data\nOne thing we often want to do during EDA is to examine the quality of the data - are there missing values? What quirks might exist in the dataset?\nThe skimr package in R, and the similar skimpy package in python (which has a much better name, in my opinion), can help provide visual summaries of the data.\nInstall both packages, and read the package documentation (R, Python).\n[Part 1] Use each package and generate summaries of your data that require the use of at least some non-default options in each package’s skim function.\n[Part 2] Write 1-2 sentences about what you can tell from each summary display you generate. Did you discover anything new about the data?\n\n\nGenerating Tables\nAnother useful technique for exploratory data analysis is to generate summary tables. You may want to use the dplyr package in R (group_by or count functions), as well as the groupby and count methods in Pandas. Python example, R example\n[Part 1] Using R and Python, generate a table that shows what proportion of recipes contain each type of ingredient, for the most common 20 ingredients.\n[Part 2] Print out a character string that lists all of the ingredients that do not appear in at least 20 recipes.\n(Delete this note, but you can include data values inline in markdown text by using backticks, at least in R. For instance, here is R’s built in value for pi: 3.1415927. Unfortunately, this doesn’t work in python using the knitr markdown engine, but you can print the list out in python anyways using a code chunk.)\n\n\nVisualization\nUsing whatever plotting system you are comfortable with in R or python, see if you can create a couple of useful exploratory data visualizations which address one of the questions you wrote above - or another question which you’ve come up with as you’ve worked on this assignment.\n[Part 1] Create at least one plot (it doesn’t have to be pretty) that showcases an interesting facet of the data.\n[Part 2] Write 2-3 sentences about what you can learn from that plot and what directions you might want to investigate from here."
  },
  {
    "objectID": "homework-templates/03/index.html",
    "href": "homework-templates/03/index.html",
    "title": "Homework: Fizzbuzz",
    "section": "",
    "text": "Instructions:\n\nYou can answer the questions below in either R or Python. I will give you 50% extra credit if you provide answers in both languages. Otherwise, please feel free to delete the code chunks corresponding to the language you don’t wish to work in.\nOnce you have finished this assignment, render the document (Ctrl/Cmd-Shift-K or the Render button).\nCommit the qmd file and any other files you have changed to the repository and push your changes.\nIn Canvas, submit a link to your github repository containing the updated files.\n\n\nIntroduction to Fizzbuzz\nThe “FizzBuzz Test” is a famous programming interview question.\n\nWrite a program that prints the numbers from 1 to 30. But for multiples of three print “Fizz” instead of the number and for the multiples of five print “Buzz”. For numbers which are multiples of both three and five print “FizzBuzz”\n\nStart by filling in the following table for the numbers 1:30 manually, to get a feel for the task.\n\nFizzbuzz for 1:30\n\n\nInput\nOutput\n\n\n\n\n1\n\n\n\n2\n\n\n\n3\n\n\n\n4\n\n\n\n5\n\n\n\n6\n\n\n\n7\n\n\n\n8\n\n\n\n9\n\n\n\n10\n\n\n\n11\n\n\n\n12\n\n\n\n13\n\n\n\n14\n\n\n\n15\n\n\n\n16\n\n\n\n17\n\n\n\n18\n\n\n\n19\n\n\n\n20\n\n\n\n21\n\n\n\n22\n\n\n\n23\n\n\n\n24\n\n\n\n25\n\n\n\n26\n\n\n\n27\n\n\n\n28\n\n\n\n29\n\n\n\n30\n\n\n\n\nOn paper or using a tool such as excalidraw.com, create a program flow map for the sequence of if-statements you need to evaluate for fizzbuzz. Add the picture to the folder containing this file, and name the picture flowchart.png. Add the picture to Git and commit/push your changes.\n\n\n\nProgram Flow map for FizzBuzz\n\n\nIn the chunk below, write code which will solve this problem for a single value x. You should be able to change the value of x at the top of the chunk and still get the correct answer.\n\nx &lt;- 3\n\n# FizzBuzz code goes here\n\n\nx = 3\n\n# FizzBuzz code goes here\n\nModify the code above so that the result is stored in a value y.\n\nx &lt;- 3\ny &lt;- NA\n# FizzBuzz code goes here\n\n\n\nprint(paste(\"For x = \", x, \" my code produces \", y, sep = \"\"))\n\n[1] \"For x = 3 my code produces NA\"\n\n\n\nimport numpy as np\nx = 3\ny = np.nan\n# FizzBuzz code goes here\n\n\n\nprint(\"For x = \"+ str(x)+ \" my code produces \"+ str(y))\n\nFor x = 3 my code produces nan\n\n\n\n\nA vector of FizzBuzz\nThe code in the previous problem only solves FizzBuzz for a single value of x. Extend your code using a loop so that it will work for all values in a vector xx, storing values in a corresponding vector yy.\nYou can copy/paste code from previous chunks to make this chunk easier.\n\nxx &lt;- 1:30\nyy &lt;- rep(NA, times = 30)\n\n# FizzBuzz code goes here\n\n\n# Printing the results in a data frame\nres &lt;- cbind(x = xx, result = yy)\nres\n\n       x result\n [1,]  1     NA\n [2,]  2     NA\n [3,]  3     NA\n [4,]  4     NA\n [5,]  5     NA\n [6,]  6     NA\n [7,]  7     NA\n [8,]  8     NA\n [9,]  9     NA\n[10,] 10     NA\n[11,] 11     NA\n[12,] 12     NA\n[13,] 13     NA\n[14,] 14     NA\n[15,] 15     NA\n[16,] 16     NA\n[17,] 17     NA\n[18,] 18     NA\n[19,] 19     NA\n[20,] 20     NA\n[21,] 21     NA\n[22,] 22     NA\n[23,] 23     NA\n[24,] 24     NA\n[25,] 25     NA\n[26,] 26     NA\n[27,] 27     NA\n[28,] 28     NA\n[29,] 29     NA\n[30,] 30     NA\n\n\n\nimport pandas as pd\nxx = np.array(range(30)) + 1\nyy = [np.nan]*30\n\n# FizzBuzz code goes here\n\n\n# Printing the results in a data frame\nres = pd.DataFrame({\"x\": xx, \"result\": yy})\nres\n\n     x  result\n0    1     NaN\n1    2     NaN\n2    3     NaN\n3    4     NaN\n4    5     NaN\n5    6     NaN\n6    7     NaN\n7    8     NaN\n8    9     NaN\n9   10     NaN\n10  11     NaN\n11  12     NaN\n12  13     NaN\n13  14     NaN\n14  15     NaN\n15  16     NaN\n16  17     NaN\n17  18     NaN\n18  19     NaN\n19  20     NaN\n20  21     NaN\n21  22     NaN\n22  23     NaN\n23  24     NaN\n24  25     NaN\n25  26     NaN\n26  27     NaN\n27  28     NaN\n28  29     NaN\n29  30     NaN\n\n\n\n\nFunctions and FizzBuzz\nIn the previous question, you extended your fizzbuzz code to iterate through a vector xx and produce a result yy. Can you generalize this, writing a function fizzbuzz that takes a variable x and returns a corresponding fizzbuzzified variable? Your function should be able to handle x that is a vector or a scalar value, and should store your solution in yy.\n\nxx &lt;- sample(1:100, 10) # get a random xx\nyy &lt;- rep(NA, 10)\n\nfizzbuzz &lt;- function(x) {\n  # Your code goes here\n}\n\nyy &lt;- fizzbuzz(x = xx)\n\n# Printing the results in a data frame\nres &lt;- cbind(x = xx, result = yy)\nres\n\n       x\n [1,] 83\n [2,] 22\n [3,] 30\n [4,] 82\n [5,] 61\n [6,] 77\n [7,] 38\n [8,] 80\n [9,] 67\n[10,]  3\n\n\n\nimport pandas as pd\nfrom random import choices\nxx = np.array(choices(range(100), k = 10)) + 1\n\n\ndef fizzbuzz(x):\n  y = [np.nan]*len(x) # this just defines something to return\n  # Your code goes here\n  return y\n\nyy = fizzbuzz(x = xx)\n\n# Printing the results in a data frame\nres = pd.DataFrame({\"x\": xx, \"result\": yy})\nres\n\n    x  result\n0   6     NaN\n1   1     NaN\n2  52     NaN\n3  89     NaN\n4  47     NaN\n5  12     NaN\n6   2     NaN\n7  73     NaN\n8  73     NaN\n9  59     NaN\n\n\n\n\nDefensive Programming\nYou cannot always assume that the person using your functions knows what they’re doing. Add a check to the function you wrote in the last question so that it will handle non-numeric input by issuing an error message.\nIn R, you can use the function stopifnot() to halt function execution if there is an error; this will give you a basic error message.\n\nstopifnot(2 &gt; 3)\n\nError: 2 &gt; 3 is not TRUE\n\n\nIn Python, you can use a try: statement with a except: clause. This functions like an if-else statement, where if no error occurs, the except statement is never executed.\n\ntry: \n  int(\"hello\")\nexcept ValueError: \n  print(\"Error: could not turn value into an integer\")\n\nError: could not turn value into an integer\n\n\nSee more examples of this in the Input Validation section of the textbook.\n\nxx &lt;- sample(1:100, 10) # get a random xx\nyy &lt;- rep(NA, 10)\n\nfizzbuzz &lt;- function(x) {\n  # Your code goes here\n}\n\nyy &lt;- fizzbuzz(x = xx)\n\n# Printing the results in a data frame\nres &lt;- cbind(x = xx, result = yy)\nres\n\n       x\n [1,] 77\n [2,] 95\n [3,] 88\n [4,] 48\n [5,] 68\n [6,] 38\n [7,]  3\n [8,] 67\n [9,] 71\n[10,] 44\n\n\n\nimport pandas as pd\nfrom random import choices\nxx = np.array(choices(range(100), k = 10)) + 1\n\n\ndef fizzbuzz(x):\n  y = [np.nan]*len(x) # this just defines something to return\n  # Your code goes here\n  return y\n\nyy = fizzbuzz(x = xx)\n\n# Printing the results in a data frame\nres = pd.DataFrame({\"x\": xx, \"result\": yy})\nres\n\n    x  result\n0  65     NaN\n1  75     NaN\n2  29     NaN\n3  10     NaN\n4  68     NaN\n5  31     NaN\n6  62     NaN\n7   5     NaN\n8  38     NaN\n9  91     NaN"
  },
  {
    "objectID": "homework-templates/01/index.html",
    "href": "homework-templates/01/index.html",
    "title": "👋 The Basics of GitHub",
    "section": "",
    "text": "The goal of this course is to give you a brief introduction to GitHub. We’ll also provide you with materials for further learning and a few ideas to get you started on our platform. 🚀"
  },
  {
    "objectID": "homework-templates/01/index.html#course-overview-and-learning-outcomes",
    "href": "homework-templates/01/index.html#course-overview-and-learning-outcomes",
    "title": "👋 The Basics of GitHub",
    "section": "",
    "text": "The goal of this course is to give you a brief introduction to GitHub. We’ll also provide you with materials for further learning and a few ideas to get you started on our platform. 🚀"
  },
  {
    "objectID": "homework-templates/01/index.html#git-and-github",
    "href": "homework-templates/01/index.html#git-and-github",
    "title": "👋 The Basics of GitHub",
    "section": "Git and GitHub",
    "text": "Git and GitHub\nGit is a distributed Version Control System (VCS), which means it is a useful tool for easily tracking changes to your code, collaborating, and sharing. With Git you can track the changes you make to your project so you always have a record of what you’ve worked on and can easily revert back to an older version if need be. It also makes working with others easier—groups of people can work together on the same project and merge their changes into one final source!\nGitHub is a way to use the same power of Git all online with an easy-to-use interface. It’s used across the software world and beyond to collaborate and maintain the history of projects.\nGitHub is home to some of the most advanced technologies in the world. Whether you’re visualizing data or building a new game, there’s a whole community and set of tools on GitHub that can get you to the next step. This course starts with the basics of GitHub, but we’ll dig into the rest later."
  },
  {
    "objectID": "homework-templates/01/index.html#understanding-the-github-flow",
    "href": "homework-templates/01/index.html#understanding-the-github-flow",
    "title": "👋 The Basics of GitHub",
    "section": "Understanding the GitHub flow",
    "text": "Understanding the GitHub flow\nThe GitHub flow is a lightweight workflow that allows you to experiment and collaborate on your projects easily, without the risk of losing your previous work.\n\nRepositories\nA repository is where your project work happens–think of it as your project folder. It contains all of your project’s files and revision history. You can work within a repository alone or invite others to collaborate with you on those files.\n\n\nCloning\nWhen a repository is created with GitHub, it’s stored remotely in the ☁️. You can clone a repository to create a local copy on your computer and then use Git to sync the two. This makes it easier to fix issues, add or remove files, and push larger commits. You can also use the editing tool of your choice as opposed to the GitHub UI. Cloning a repository also pulls down all the repository data that GitHub has at that point in time, including all versions of every file and folder for the project! This can be helpful if you experiment with your project and then realize you liked a previous version more. To learn more about cloning, read “Cloning a Repository”.\n\n\nCommitting and pushing\nCommitting and pushing are how you can add the changes you made on your local machine to the remote repository in GitHub. That way your instructor and/or teammates can see your latest work when you’re ready to share it. You can make a commit when you have made changes to your project that you want to “checkpoint.” You can also add a helpful commit message to remind yourself or your teammates what work you did (e.g. “Added a README with information about our project”).\nOnce you have a commit or multiple commits that you’re ready to add to your repository, you can use the push command to add those changes to your remote repository. Committing and pushing may feel new at first, but we promise you’ll get used to it 🙂"
  },
  {
    "objectID": "homework-templates/01/index.html#github-terms-to-know",
    "href": "homework-templates/01/index.html#github-terms-to-know",
    "title": "👋 The Basics of GitHub",
    "section": "💻 GitHub terms to know",
    "text": "💻 GitHub terms to know\n\nRepositories\nWe mentioned repositories already, they are where your project work happens, but let’s talk a bit more about the details of them! As you work more on GitHub you will have many repositories which may feel confusing at first. Fortunately, your “GitHub dashboard” helps to easily navigate to your repositories and see useful information about them. Make sure you’re logged in to see it!\nRepositories also contain READMEs. You can add a README file to your repository to tell other people why your project is useful, what they can do with your project, and how they can use it. We are using this README to communicate how to learn Git and GitHub with you. 😄 To learn more about repositories read “Creating, Cloning, and Archiving Repositories and “About README’s”.\n\n\nBranches\nYou can use branches on GitHub to isolate work that you do not want merged into your final project just yet. Branches allow you to develop features, fix bugs, or safely experiment with new ideas in a contained area of your repository. Typically, you might create a new branch from the default branch of your repository—main. This makes a new working copy of your repository for you to experiment with. Once your new changes have been reviewed by a teammate, or you are satisfied with them, you can merge your changes into the default branch of your repository. To learn more about branching, read “About Branches”.\nNote: In this class, you will not be required to use branches.\n\n\nForks\nA fork is another way to copy a repository, but is usually used when you want to contribute to someone else’s project. Forking a repository allows you to freely experiment with changes without affecting the original project and is very popular when contributing to open source software projects! To learn more about forking, read “Fork a repo”\nNote: In this class, you will not be required to use forks.\n\n\nPull requests\nWhen working with branches, you can use a pull request to tell others about the changes you want to make and ask for their feedback. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add more changes if need be. You can add specific people as reviewers of your pull request which shows you want their feedback on your changes! Once a pull request is ready-to-go, it can be merged into your main branch. To learn more about pull requests, read “About Pull Requests”.\nNote: In this course, you will not be required to use pull requests.\n\n\nIssues\nIssues are a way to track enhancements, tasks, or bugs for your work on GitHub. Issues are a great way to keep track of all the tasks you want to work on for your project and let others know what you plan to work on. You can also use issues to tell a favorite open source project about a bug you found or a feature you think would be great to add!\nFor larger projects, you can keep track of many issues on a project board. GitHub Projects help you organize and prioritize your work and you can read more about them in this “About Project boards document. You likely won’t need a project board for your assignments, but once you move on to even bigger projects, they’re a great way to organize your team’s work! You can also link together pull requests and issues to show that a fix is in progress and to automatically close the issue when someone merges the pull request. To learn more about issues and linking them to your pull requests, read “About Issues”.\n\n\nYour user profile\nYour profile page tells people the story of your work through the repositories you’re interested in, the contributions you’ve made, and the conversations you’ve had. You can also give the world a unique view into who you are with your profile README. You can use your profile to let future employers know all about you! To learn more about your user profile and adding and updating your profile README, read “Managing Your Profile README”.\n\n\nUsing markdown on GitHub\nYou might have noticed already, but you can add some fun styling to your issues, pull requests, and files. “Markdown” is an easy way to style your issues, pull requests, and files with some simple syntax. This can be helpful to organize your information and make it easier for others to read. You can also drop in gifs and images to help convey your point! To learn more about using GitHub’s flavor of markdown, read “Basic Writing and Formatting Syntax”.\n\n\nEngaging with the GitHub community\nThe GitHub community is vast. There are many types of people who use GitHub in their day to day—students like you, professional developers, hobbyists working on open source projects, and explorers who are just jumping into the world of software development on their own. There are many ways you can interact with the larger GitHub community, but here are three places where you can start.\n\nStarring repositories\nIf you find a repository interesting or you want to keep track of it, star it! When you star a repository it’s also used as a signal to surface better recommendations on github.com/explore. If you’d like to get back to your starred repositories you can do so via your user profile. To learn more about starring repositories, read “Saving Repositories with Stars”.\n\n\nFollowing users\nYou can follow people on GitHub to receive notifications about their activity and discover projects in their communities. When you follow a user, their public GitHub activity will show up on your dashboard so you can see all the cool things they are working on. To learn more about following users, read “Following People”.\n\n\nBrowsing GitHub Explore\nGitHub Explore is a great place to do just that … explore :smile: You can find new projects, events, and developers to interact with.\nYou can check out the GitHub Explore website at github.com/explore. The more you intereact with GitHub the more tailored your Explore view will be."
  },
  {
    "objectID": "homework-templates/01/index.html#next-steps",
    "href": "homework-templates/01/index.html#next-steps",
    "title": "👋 The Basics of GitHub",
    "section": "📝 Next steps",
    "text": "📝 Next steps\n\nClone this repository to your local machine\nOn your local machine, create a new markdown file in this repository named ‘About_Me.md’. Provide a short biography/introduction for yourself and use markdown formatting\n\nMarkdown Basics provides an overview of different formatting options in markdown.\nYou must use at least the following formatting elements: header, subheader, bold or italic, bulleted list, and an image.\n\nCommit your changes to your new file locally and push them back to your github repository. Check on Github to make sure the new file appears.\nTo get full credit for your assignment, you will need to have worked with your git repository locally. I will be able to see if you have used the github editor to make your changes instead :)."
  },
  {
    "objectID": "homework-templates/01/index.html#resources",
    "href": "homework-templates/01/index.html#resources",
    "title": "👋 The Basics of GitHub",
    "section": "📚 Resources",
    "text": "📚 Resources\n\nA short video explaining what GitHub is\nGit and GitHub learning resources\nUnderstanding the GitHub flow\nHow to use GitHub branches\nInteractive Git training materials\nGitHub’s Learning Lab\nEducation community forum\nGitHub community forum"
  },
  {
    "objectID": "homework-templates/01/index.html#optional-extra-steps",
    "href": "homework-templates/01/index.html#optional-extra-steps",
    "title": "👋 The Basics of GitHub",
    "section": "Optional extra steps",
    "text": "Optional extra steps\n\nCreate your profile README. Let the world know a little bit more about you! What are you interested in learning? What are you working on? What’s your favorite hobby? Learn more about creating your profile README in the document, “Managing Your Profile README”.\nGo to your user dashboard and create a new repository. Experiment with the features within that repository to familiarize yourself with them.\nLet us know what you liked or didn’t like about the content of this course. What would you like to see more of? What would be interesting or helpful to your learning journey?"
  },
  {
    "objectID": "weeks/week-16.html",
    "href": "weeks/week-16.html",
    "title": "Week 16: Final Part 1",
    "section": "",
    "text": "Everything!"
  },
  {
    "objectID": "weeks/week-16.html#reading",
    "href": "weeks/week-16.html#reading",
    "title": "Week 16: Final Part 1",
    "section": "",
    "text": "Everything!"
  },
  {
    "objectID": "weeks/week-14.html",
    "href": "weeks/week-14.html",
    "title": "Week 14: Thanksgiving",
    "section": "",
    "text": "Enjoy a break!\n\n\n\nNo Class – Thanksgiving\n\n\n\nNo Class – Thanksgiving",
    "crumbs": [
      "Weekly materials",
      "Week 14 - Thanksgiving"
    ]
  },
  {
    "objectID": "weeks/week-14.html#reading",
    "href": "weeks/week-14.html#reading",
    "title": "Week 14: Thanksgiving",
    "section": "",
    "text": "Enjoy a break!",
    "crumbs": [
      "Weekly materials",
      "Week 14 - Thanksgiving"
    ]
  },
  {
    "objectID": "weeks/week-14.html#tuesday",
    "href": "weeks/week-14.html#tuesday",
    "title": "Week 14: Thanksgiving",
    "section": "",
    "text": "No Class – Thanksgiving",
    "crumbs": [
      "Weekly materials",
      "Week 14 - Thanksgiving"
    ]
  },
  {
    "objectID": "weeks/week-14.html#thursday",
    "href": "weeks/week-14.html#thursday",
    "title": "Week 14: Thanksgiving",
    "section": "",
    "text": "No Class – Thanksgiving",
    "crumbs": [
      "Weekly materials",
      "Week 14 - Thanksgiving"
    ]
  },
  {
    "objectID": "weeks/week-12.html",
    "href": "weeks/week-12.html",
    "title": "Week 12: Simulation",
    "section": "",
    "text": "For Class:\n\nSimulation\n\nContext:\n\nFree Wifi with Randomness\n\nNumerical Integration\n\nSeductions of Sim - Policy as a Simulation Game\nProbability Theory and Monte Carlo (This uses Excel for computing, which sucks, but it is also a decent explanation of the process)\nInput Analysis (Optional)\n\n\n\n\nReading Quiz Week 12\n\n\n\n\n\n\nWork through the examples in the textbook\n\n\n\n\n\nSlides\n\n\n\n\n\nSlides",
    "crumbs": [
      "Weekly materials",
      "Week 12 - Simulation"
    ]
  },
  {
    "objectID": "weeks/week-12.html#reading",
    "href": "weeks/week-12.html#reading",
    "title": "Week 12: Simulation",
    "section": "",
    "text": "For Class:\n\nSimulation\n\nContext:\n\nFree Wifi with Randomness\n\nNumerical Integration\n\nSeductions of Sim - Policy as a Simulation Game\nProbability Theory and Monte Carlo (This uses Excel for computing, which sucks, but it is also a decent explanation of the process)\nInput Analysis (Optional)\n\n\n\n\nReading Quiz Week 12",
    "crumbs": [
      "Weekly materials",
      "Week 12 - Simulation"
    ]
  },
  {
    "objectID": "weeks/week-12.html#prepare-for-class",
    "href": "weeks/week-12.html#prepare-for-class",
    "title": "Week 12: Simulation",
    "section": "",
    "text": "Work through the examples in the textbook",
    "crumbs": [
      "Weekly materials",
      "Week 12 - Simulation"
    ]
  },
  {
    "objectID": "weeks/week-12.html#tuesday",
    "href": "weeks/week-12.html#tuesday",
    "title": "Week 12: Simulation",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 12 - Simulation"
    ]
  },
  {
    "objectID": "weeks/week-12.html#thursday",
    "href": "weeks/week-12.html#thursday",
    "title": "Week 12: Simulation",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 12 - Simulation"
    ]
  },
  {
    "objectID": "weeks/week-10.html",
    "href": "weeks/week-10.html",
    "title": "Week 10: Reproducibility & Documents",
    "section": "",
    "text": "For Class:\n\nDebugging and Reproducible Examples\nReproducibility and Professional Communication\n\nContext:\n\nCommon errors in R: An Empirical Investigation\nFramed! Reproducing and Revisiting 150-year-old Charts\nA Study in Reproducibility: The Congruent Matching Cells Algorithm and cmcR package (Optional)\nOpinionated Analysis Development (Recommended)\n\nThink about:\n\nHow important is long-term reproducibility?\n\nHow do the two articles differ with respect to types of reproducibility?\n\nWhat attempts at reproducibility worked and didn’t work in each article?\n\nWhat important factors must exist for reproducibility?\n\nOther Resources (not required):\n\nYou can see all of the pages of the Statistical Atlases at the Library of Congress (and even download extremely high resolution scans, if you want to):\n\n9th census (1870)\n10th census (1880)\n11th census (1890)\nCensus page with links to other censuses\n\nthe 1900,1910, and 1920 census atlases are not nearly as impressive.\n\nA Modern Census Atlas produced in 2007 attempted to reclaim this graphical history.\n\n\n\n\n\nReading Quiz Week 10\n\n\n\n\n\n\nComplete the debugging exercises to gain an appreciation for the importance of reproducible examples\n\n\n\n\n\nSlides\n\n\n\n\n\nSlides",
    "crumbs": [
      "Weekly materials",
      "Week 10 - Reproducibility"
    ]
  },
  {
    "objectID": "weeks/week-10.html#reading",
    "href": "weeks/week-10.html#reading",
    "title": "Week 10: Reproducibility & Documents",
    "section": "",
    "text": "For Class:\n\nDebugging and Reproducible Examples\nReproducibility and Professional Communication\n\nContext:\n\nCommon errors in R: An Empirical Investigation\nFramed! Reproducing and Revisiting 150-year-old Charts\nA Study in Reproducibility: The Congruent Matching Cells Algorithm and cmcR package (Optional)\nOpinionated Analysis Development (Recommended)\n\nThink about:\n\nHow important is long-term reproducibility?\n\nHow do the two articles differ with respect to types of reproducibility?\n\nWhat attempts at reproducibility worked and didn’t work in each article?\n\nWhat important factors must exist for reproducibility?\n\nOther Resources (not required):\n\nYou can see all of the pages of the Statistical Atlases at the Library of Congress (and even download extremely high resolution scans, if you want to):\n\n9th census (1870)\n10th census (1880)\n11th census (1890)\nCensus page with links to other censuses\n\nthe 1900,1910, and 1920 census atlases are not nearly as impressive.\n\nA Modern Census Atlas produced in 2007 attempted to reclaim this graphical history.\n\n\n\n\n\nReading Quiz Week 10",
    "crumbs": [
      "Weekly materials",
      "Week 10 - Reproducibility"
    ]
  },
  {
    "objectID": "weeks/week-10.html#prepare-for-class",
    "href": "weeks/week-10.html#prepare-for-class",
    "title": "Week 10: Reproducibility & Documents",
    "section": "",
    "text": "Complete the debugging exercises to gain an appreciation for the importance of reproducible examples",
    "crumbs": [
      "Weekly materials",
      "Week 10 - Reproducibility"
    ]
  },
  {
    "objectID": "weeks/week-10.html#tuesday",
    "href": "weeks/week-10.html#tuesday",
    "title": "Week 10: Reproducibility & Documents",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 10 - Reproducibility"
    ]
  },
  {
    "objectID": "weeks/week-10.html#thursday",
    "href": "weeks/week-10.html#thursday",
    "title": "Week 10: Reproducibility & Documents",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 10 - Reproducibility"
    ]
  },
  {
    "objectID": "weeks/week-08.html",
    "href": "weeks/week-08.html",
    "title": "Week 8: Graphics",
    "section": "",
    "text": "For Class:\n\nData Visualization\nCreating Good Charts\n\nContext:\n\nChapter 3 of Data Feminism: On Rational, Scientific, Objective Viewpoints from Mythical, Imaginary, Impossible Standpoints\n\nContent warning: This chapter contains an image of a largely unclothed body (PG or PG13 at most).\nThink about:\n\nWhen do you think it is appropriate to create graphics which inspire and elevate emotion in viewers? When is this not appropriate?\nWhen you see a chart, do you think of it as a rhetorical tool or an objective display? What factors contribute to viewing the chart as one or the other?\n\nWhat ways do you think are effective for showing uncertainty in data? Have you seen any effective ways of visualizing uncertainty or missing data which are not mentioned in this chapter?\n\n\n\n\nReading Quiz Week 8\n\n\n\n\n\n\nWork through the examples in the textbook\n\n\n\n\n\nSlides\n\n\n\n\n\nSlides\n\n\n\n\n\nHomework 8",
    "crumbs": [
      "Weekly materials",
      "Week 8 - Graphics"
    ]
  },
  {
    "objectID": "weeks/week-08.html#reading",
    "href": "weeks/week-08.html#reading",
    "title": "Week 8: Graphics",
    "section": "",
    "text": "For Class:\n\nData Visualization\nCreating Good Charts\n\nContext:\n\nChapter 3 of Data Feminism: On Rational, Scientific, Objective Viewpoints from Mythical, Imaginary, Impossible Standpoints\n\nContent warning: This chapter contains an image of a largely unclothed body (PG or PG13 at most).\nThink about:\n\nWhen do you think it is appropriate to create graphics which inspire and elevate emotion in viewers? When is this not appropriate?\nWhen you see a chart, do you think of it as a rhetorical tool or an objective display? What factors contribute to viewing the chart as one or the other?\n\nWhat ways do you think are effective for showing uncertainty in data? Have you seen any effective ways of visualizing uncertainty or missing data which are not mentioned in this chapter?\n\n\n\n\nReading Quiz Week 8",
    "crumbs": [
      "Weekly materials",
      "Week 8 - Graphics"
    ]
  },
  {
    "objectID": "weeks/week-08.html#prepare-for-class",
    "href": "weeks/week-08.html#prepare-for-class",
    "title": "Week 8: Graphics",
    "section": "",
    "text": "Work through the examples in the textbook",
    "crumbs": [
      "Weekly materials",
      "Week 8 - Graphics"
    ]
  },
  {
    "objectID": "weeks/week-08.html#tuesday",
    "href": "weeks/week-08.html#tuesday",
    "title": "Week 8: Graphics",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 8 - Graphics"
    ]
  },
  {
    "objectID": "weeks/week-08.html#thursday",
    "href": "weeks/week-08.html#thursday",
    "title": "Week 8: Graphics",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 8 - Graphics"
    ]
  },
  {
    "objectID": "weeks/week-08.html#practice-your-skills",
    "href": "weeks/week-08.html#practice-your-skills",
    "title": "Week 8: Graphics",
    "section": "",
    "text": "Homework 8",
    "crumbs": [
      "Weekly materials",
      "Week 8 - Graphics"
    ]
  },
  {
    "objectID": "weeks/week-06.html",
    "href": "weeks/week-06.html",
    "title": "Week 6: Data Cleaning and Manipulation",
    "section": "",
    "text": "For Class:\n\nData Cleaning\nStrings\n\nContext:\n\nChapter 5: “Designing and Structuring Data Pipelines” from The Pragmatic Programmer for Machine Learning by Marco Scutari and Mauro Malvestio\nTidy Tools Manifesto\nPandas vs. dplyr Reddit discussion (optional, but useful to understand why pandas is different than dplyr)\nMethod chaining in Pandas (optional but useful)\n\nThink about:\n\nWhat do you think the strengths and weaknesses are of the dplyr approach to tidy code compared to pandas?\nWhat do you need to focus on when writing code if you want to make your code tidy?\nWhich approach to data manipulation do you prefer? Why? Is there a case where you would prefer the other program?\n\n\n\n\nReading Quiz Week 6\n\n\n\n\n\n\nWork through the examples in the textbook\n\n\n\n\n\nSlides\n\n\n\n\n\nSlides\n\n\n\n\n\nHomework 6",
    "crumbs": [
      "Weekly materials",
      "Week 6 - Data Cleaning"
    ]
  },
  {
    "objectID": "weeks/week-06.html#reading",
    "href": "weeks/week-06.html#reading",
    "title": "Week 6: Data Cleaning and Manipulation",
    "section": "",
    "text": "For Class:\n\nData Cleaning\nStrings\n\nContext:\n\nChapter 5: “Designing and Structuring Data Pipelines” from The Pragmatic Programmer for Machine Learning by Marco Scutari and Mauro Malvestio\nTidy Tools Manifesto\nPandas vs. dplyr Reddit discussion (optional, but useful to understand why pandas is different than dplyr)\nMethod chaining in Pandas (optional but useful)\n\nThink about:\n\nWhat do you think the strengths and weaknesses are of the dplyr approach to tidy code compared to pandas?\nWhat do you need to focus on when writing code if you want to make your code tidy?\nWhich approach to data manipulation do you prefer? Why? Is there a case where you would prefer the other program?\n\n\n\n\nReading Quiz Week 6",
    "crumbs": [
      "Weekly materials",
      "Week 6 - Data Cleaning"
    ]
  },
  {
    "objectID": "weeks/week-06.html#prepare-for-class",
    "href": "weeks/week-06.html#prepare-for-class",
    "title": "Week 6: Data Cleaning and Manipulation",
    "section": "",
    "text": "Work through the examples in the textbook",
    "crumbs": [
      "Weekly materials",
      "Week 6 - Data Cleaning"
    ]
  },
  {
    "objectID": "weeks/week-06.html#tuesday",
    "href": "weeks/week-06.html#tuesday",
    "title": "Week 6: Data Cleaning and Manipulation",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 6 - Data Cleaning"
    ]
  },
  {
    "objectID": "weeks/week-06.html#thursday",
    "href": "weeks/week-06.html#thursday",
    "title": "Week 6: Data Cleaning and Manipulation",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 6 - Data Cleaning"
    ]
  },
  {
    "objectID": "weeks/week-06.html#practice-your-skills",
    "href": "weeks/week-06.html#practice-your-skills",
    "title": "Week 6: Data Cleaning and Manipulation",
    "section": "",
    "text": "Homework 6",
    "crumbs": [
      "Weekly materials",
      "Week 6 - Data Cleaning"
    ]
  },
  {
    "objectID": "weeks/week-04.html",
    "href": "weeks/week-04.html",
    "title": "Week 4: Data Programming",
    "section": "",
    "text": "For Class:\n\nProgramming with Data\n\nContext:\n\nChapter 2: “A Pragmatic Approach” of The Pragmatic Programmer: Your Journey to Mastery, by David Thomas and Andrew Hunt. As you read this chapter, make a checklist of good code practices that you can use before submitting your homework. Make a note of principles you don’t understand yet (that’s ok!) that you can come back to at the end of the semester.\nTidy Tuesday Screencast: Doctor Who, by David Robinson.\n\nHow does Software Development Compare with Statistical Programming/Analysis - a StackOverflow discussion of differences between software development and statistical programming. Not an exhaustive set of viewpoints, but a useful discussion to read.\n\nThink about:\n\nWhat did you learn from watching someone else do data analysis in realtime?\nIn your opinion, does programming with data differ from software development? How, and in what ways?\nWhat skills are shared between software dev and statistical programming, and what skills are specific to each?\n\n\n\n\nReading Quiz Week 4\n\n\n\n\n\n\nWork through the examples in the textbook\n\n\n\n\n\nSlides\n\n\n\n\n\nSlides\n\n\n\n\n\nHomework 4",
    "crumbs": [
      "Weekly materials",
      "Week 4 - Data Programming"
    ]
  },
  {
    "objectID": "weeks/week-04.html#reading",
    "href": "weeks/week-04.html#reading",
    "title": "Week 4: Data Programming",
    "section": "",
    "text": "For Class:\n\nProgramming with Data\n\nContext:\n\nChapter 2: “A Pragmatic Approach” of The Pragmatic Programmer: Your Journey to Mastery, by David Thomas and Andrew Hunt. As you read this chapter, make a checklist of good code practices that you can use before submitting your homework. Make a note of principles you don’t understand yet (that’s ok!) that you can come back to at the end of the semester.\nTidy Tuesday Screencast: Doctor Who, by David Robinson.\n\nHow does Software Development Compare with Statistical Programming/Analysis - a StackOverflow discussion of differences between software development and statistical programming. Not an exhaustive set of viewpoints, but a useful discussion to read.\n\nThink about:\n\nWhat did you learn from watching someone else do data analysis in realtime?\nIn your opinion, does programming with data differ from software development? How, and in what ways?\nWhat skills are shared between software dev and statistical programming, and what skills are specific to each?\n\n\n\n\nReading Quiz Week 4",
    "crumbs": [
      "Weekly materials",
      "Week 4 - Data Programming"
    ]
  },
  {
    "objectID": "weeks/week-04.html#prepare-for-class",
    "href": "weeks/week-04.html#prepare-for-class",
    "title": "Week 4: Data Programming",
    "section": "",
    "text": "Work through the examples in the textbook",
    "crumbs": [
      "Weekly materials",
      "Week 4 - Data Programming"
    ]
  },
  {
    "objectID": "weeks/week-04.html#tuesday",
    "href": "weeks/week-04.html#tuesday",
    "title": "Week 4: Data Programming",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 4 - Data Programming"
    ]
  },
  {
    "objectID": "weeks/week-04.html#thursday",
    "href": "weeks/week-04.html#thursday",
    "title": "Week 4: Data Programming",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 4 - Data Programming"
    ]
  },
  {
    "objectID": "weeks/week-04.html#practice-your-skills",
    "href": "weeks/week-04.html#practice-your-skills",
    "title": "Week 4: Data Programming",
    "section": "",
    "text": "Homework 4",
    "crumbs": [
      "Weekly materials",
      "Week 4 - Data Programming"
    ]
  },
  {
    "objectID": "weeks/week-02.html",
    "href": "weeks/week-02.html",
    "title": "Week 2: Introduction to Programming and Variable Types",
    "section": "",
    "text": "For Class:\n\nIntroduction to Programming\nVariables and Basic Data Types\nGetting Started with Quarto\n\nContext:\n\nChapter 2 of The Programmer’s Brain: What Every Programmer Needs to Know About Cognition by Felienne Hermans Note that the examples in this book are given in unfamiliar programming languages. That’s ok - read the code as best as you can, but part of the point of this chapter is that reading code can be hard, and it’s useful to see how the programming language affects that perception.\nHow Integers and Floats Work, by Julia Evans (optional)\n\n\n\n\nReading Quiz Week 2\nReading Quiz Week 2.5\n\n\n\n\n\n\nWork through the examples in the textbook\n\n\n\n\n\nSlides\n\n\n\n\n\nSlides\n\n\n\n\n\nHomework 2",
    "crumbs": [
      "Weekly materials",
      "Week 2 - Programming"
    ]
  },
  {
    "objectID": "weeks/week-02.html#reading",
    "href": "weeks/week-02.html#reading",
    "title": "Week 2: Introduction to Programming and Variable Types",
    "section": "",
    "text": "For Class:\n\nIntroduction to Programming\nVariables and Basic Data Types\nGetting Started with Quarto\n\nContext:\n\nChapter 2 of The Programmer’s Brain: What Every Programmer Needs to Know About Cognition by Felienne Hermans Note that the examples in this book are given in unfamiliar programming languages. That’s ok - read the code as best as you can, but part of the point of this chapter is that reading code can be hard, and it’s useful to see how the programming language affects that perception.\nHow Integers and Floats Work, by Julia Evans (optional)\n\n\n\n\nReading Quiz Week 2\nReading Quiz Week 2.5",
    "crumbs": [
      "Weekly materials",
      "Week 2 - Programming"
    ]
  },
  {
    "objectID": "weeks/week-02.html#prepare-for-class",
    "href": "weeks/week-02.html#prepare-for-class",
    "title": "Week 2: Introduction to Programming and Variable Types",
    "section": "",
    "text": "Work through the examples in the textbook",
    "crumbs": [
      "Weekly materials",
      "Week 2 - Programming"
    ]
  },
  {
    "objectID": "weeks/week-02.html#tuesday",
    "href": "weeks/week-02.html#tuesday",
    "title": "Week 2: Introduction to Programming and Variable Types",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 2 - Programming"
    ]
  },
  {
    "objectID": "weeks/week-02.html#thursday",
    "href": "weeks/week-02.html#thursday",
    "title": "Week 2: Introduction to Programming and Variable Types",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 2 - Programming"
    ]
  },
  {
    "objectID": "weeks/week-02.html#practice-your-skills",
    "href": "weeks/week-02.html#practice-your-skills",
    "title": "Week 2: Introduction to Programming and Variable Types",
    "section": "",
    "text": "Homework 2",
    "crumbs": [
      "Weekly materials",
      "Week 2 - Programming"
    ]
  },
  {
    "objectID": "course-support.html",
    "href": "course-support.html",
    "title": "Course support",
    "section": "",
    "text": "If you have a question during lecture or lab, feel free to ask it! There are likely other students with the same question, so by asking you will create a learning opportunity for everyone.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#lectures-and-labs",
    "href": "course-support.html#lectures-and-labs",
    "title": "Course support",
    "section": "",
    "text": "If you have a question during lecture or lab, feel free to ask it! There are likely other students with the same question, so by asking you will create a learning opportunity for everyone.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#office-hours",
    "href": "course-support.html#office-hours",
    "title": "Course support",
    "section": "Office hours",
    "text": "Office hours\nOffice hours are available by appointment at this link. In general, office hours will be via Zoom - this allows me to offer more availability, and doesn’t require you to come to East campus to visit my office.\nIf you’d prefer to meet in person, try to schedule your appointment on Tuesday or Thursday, and mention in the request that you want an in-person meeting. I will let you know if that’s feasible given my schedule for the day.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#email",
    "href": "course-support.html#email",
    "title": "Course support",
    "section": "Email",
    "text": "Email\nPlease only use email for questions about personal matters that may not be appropriate for the public course forum (e.g., illness, grades, accommodations, etc.). In these cases, please add “Stat850” to the subject line, so that I can prioritize your email.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#academic-support",
    "href": "course-support.html#academic-support",
    "title": "Course support",
    "section": "Academic support",
    "text": "Academic support\nThere are times you may need help with the class that is beyond what can be provided by the teaching team. In those instances, I encourage you to visit the Center for Academic Success and Transition (CAST). CAST offers free services to all students.\nStudents have access to peer tutoring, academic coaching, and academic success workshops.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#mental-health-and-wellness",
    "href": "course-support.html#mental-health-and-wellness",
    "title": "Course support",
    "section": "Mental health and wellness",
    "text": "Mental health and wellness\nYour mental health and wellness extremely important, and the university offers resources to support students in managing daily stress and self-care. UNL offers several resources for students to manage stress, seek help with well-being, and access crisis and long-term care.\n\nCounseling and Psychological Services (CAPS), 402-472-7450\nCenter for Advocacy, Response, & Education (CARE), 402-472-3553 – resources for victims/survivors of interpersonal violence.\nServices for Students with Disabilities (SSD), ssd@unl.edu or 402-472-3787 – resources for students experiencing short or long-term disabilities that affect the campus or educational experience.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#technology",
    "href": "course-support.html#technology",
    "title": "Course support",
    "section": "Technology",
    "text": "Technology\nStudents who do not have a working computer can check out a loaner laptop from HuskerTech on city campus (Love South, Adele Hall) and east campus (Dinsdale).\nIf you are unable to get a loaner laptop set up with the software required for parts of this course, please try to let me know ahead of time - it is possible that I will be able to assist you with browser-based solutions.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-links.html",
    "href": "course-links.html",
    "title": "Useful links",
    "section": "",
    "text": "Canvas\nAssignment Submissions, Reading Quizzes, Gradebook\n\n\n\nProject Submissions\n\n\nScientific Writing for Health Research\nTextbook\n\n\nEntering the Conversation\nTextbook\n\n\nOpen Technical Communication\nTextbook",
    "crumbs": [
      "Course information",
      "Useful links"
    ]
  },
  {
    "objectID": "course-overview.html",
    "href": "course-overview.html",
    "title": "Stat 850: Computing Tools for Statisticians",
    "section": "",
    "text": "Introductions to statistical computing packages and document preparation software. Topics include: graphical techniques, data management, Monte Carlo simulation, dynamic document preparation, presentation software.",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "course-overview.html#goals",
    "href": "course-overview.html#goals",
    "title": "Stat 850: Computing Tools for Statisticians",
    "section": "Goals",
    "text": "Goals\n\nLearn how to use R and/or Python for data analysis, data processing, data visualization, and statistical simulation.\nBecome familiar with the process, techniques, and goals of exploratory data analysis.\nCreate, assess, and debug code effectively.\n\nUse online resources to find software to perform a task, comparing approaches taken by competing programs.\nRead error messages, find related problems in online forums, and isolate the conditions necessary to generate the error.\nGenerate minimum working examples or reproducible examples of errors in order to ask for help effectively.\n\nCommunicate statistical results using reproducible, dynamic tools. Understand the importance of reproducibility in scientific computation.",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "course-overview.html#objectives",
    "href": "course-overview.html#objectives",
    "title": "Stat 850: Computing Tools for Statisticians",
    "section": "Objectives",
    "text": "Objectives\n(what you should be able to do at the end of this course)\n\nClean and format the data appropriately for the intended analysis or visualization method. (Goals: 1)\nExplore a data set using numerical and visual summaries, developing questions which can be answered using statistics. (Goals: 1, 2)\nEvaluate methods or software to assess relevance to a problem. Compare similar options to determine which are more appropriate for a given application (Goals: 1, 3)\nTest and debug software, using the following sequence: (Goals: 3, 4)\n\nReproduce the error in a new environment,\nCreate a minimal reproducible example,\nResearch the error message and evaluate online resources for relevance,\nAsk for help, describing the error or problem appropriately.\n\nDocument the data, methods, and results of an analysis using reproducible methods. (Goals: 1, 2, 4)\nConstruct a reproducible statistical simulation for a given problem using methods such as MCMC, inverse probability sampling, and rejection sampling. (Goals: 1, 3, 4)",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "weeks/week-01.html",
    "href": "weeks/week-01.html",
    "title": "Week 1: Exploring the Toolbox",
    "section": "",
    "text": "For Class:\n\nRead the syllabus\nRead Computer Basics\nRead Setting up your Computer\nRead Rstudio’s Interface\nRead Scripts and Notebooks\nRead Version Control with Git\n\nHopefully, Computer Basics will be familiar to you, and the remaining information will just serve to orient you to the tools we’ll be using this semester. Focus on the last two chapters – Scripts and Notebooks, and Version control with Git – as those sections tend to be more tricky.\nContext:\n\nR4DS Introduction\nOh Shit, Git!: Recipes for Getting Out of a Git Mess, by Julia Evans (optional, but useful, and in comic form)\n\n\n\n\nReading Quiz Week 1\n\n\n\n\n\n\nInstall R, python, RStudio, quarto, and git on your computer\nRegister for a github account (you can use any email address)\nJoin the github classroom\n\n\n\n\n\nSyllabus\nSlides\n\n\n\n\n\nSlides\n\n\n\n\n\nHomework 1",
    "crumbs": [
      "Weekly materials",
      "Week 1 - Tools"
    ]
  },
  {
    "objectID": "weeks/week-01.html#reading",
    "href": "weeks/week-01.html#reading",
    "title": "Week 1: Exploring the Toolbox",
    "section": "",
    "text": "For Class:\n\nRead the syllabus\nRead Computer Basics\nRead Setting up your Computer\nRead Rstudio’s Interface\nRead Scripts and Notebooks\nRead Version Control with Git\n\nHopefully, Computer Basics will be familiar to you, and the remaining information will just serve to orient you to the tools we’ll be using this semester. Focus on the last two chapters – Scripts and Notebooks, and Version control with Git – as those sections tend to be more tricky.\nContext:\n\nR4DS Introduction\nOh Shit, Git!: Recipes for Getting Out of a Git Mess, by Julia Evans (optional, but useful, and in comic form)\n\n\n\n\nReading Quiz Week 1",
    "crumbs": [
      "Weekly materials",
      "Week 1 - Tools"
    ]
  },
  {
    "objectID": "weeks/week-01.html#prepare-for-class",
    "href": "weeks/week-01.html#prepare-for-class",
    "title": "Week 1: Exploring the Toolbox",
    "section": "",
    "text": "Install R, python, RStudio, quarto, and git on your computer\nRegister for a github account (you can use any email address)\nJoin the github classroom",
    "crumbs": [
      "Weekly materials",
      "Week 1 - Tools"
    ]
  },
  {
    "objectID": "weeks/week-01.html#tuesday",
    "href": "weeks/week-01.html#tuesday",
    "title": "Week 1: Exploring the Toolbox",
    "section": "",
    "text": "Syllabus\nSlides",
    "crumbs": [
      "Weekly materials",
      "Week 1 - Tools"
    ]
  },
  {
    "objectID": "weeks/week-01.html#thursday",
    "href": "weeks/week-01.html#thursday",
    "title": "Week 1: Exploring the Toolbox",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 1 - Tools"
    ]
  },
  {
    "objectID": "weeks/week-01.html#practice-your-skills",
    "href": "weeks/week-01.html#practice-your-skills",
    "title": "Week 1: Exploring the Toolbox",
    "section": "",
    "text": "Homework 1",
    "crumbs": [
      "Weekly materials",
      "Week 1 - Tools"
    ]
  },
  {
    "objectID": "weeks/week-03.html",
    "href": "weeks/week-03.html",
    "title": "Week 3: Data and Control Structures",
    "section": "",
    "text": "For Class:\n\nUsing Functions and Libraries\nData Structures\nMatrix Calculations\nControl Structures\nWriting Functions\n\nContext:\n\nGood enough practices for scientific computing\n\nThink about:\n\nWhat basic computing skills were you taught? Which ones were you not taught?\nWhich workflows do you think will be useful to you? Which ones do you plan to ignore for now? Why?\nIf you are planning to ignore one or more workflows, when (if ever) do you think you will want or need to learn them?\n\n\n\n\nReading Quiz Week 3\nReading Quiz Week 3.5\n\n\n\n\n\n\nWork through the examples in the textbook\n\n\n\n\n\nSlides\n\n\n\n\n\nSlides\n\n\n\n\n\nHomework 3",
    "crumbs": [
      "Weekly materials",
      "Week 3 - Data & Control Structures"
    ]
  },
  {
    "objectID": "weeks/week-03.html#reading",
    "href": "weeks/week-03.html#reading",
    "title": "Week 3: Data and Control Structures",
    "section": "",
    "text": "For Class:\n\nUsing Functions and Libraries\nData Structures\nMatrix Calculations\nControl Structures\nWriting Functions\n\nContext:\n\nGood enough practices for scientific computing\n\nThink about:\n\nWhat basic computing skills were you taught? Which ones were you not taught?\nWhich workflows do you think will be useful to you? Which ones do you plan to ignore for now? Why?\nIf you are planning to ignore one or more workflows, when (if ever) do you think you will want or need to learn them?\n\n\n\n\nReading Quiz Week 3\nReading Quiz Week 3.5",
    "crumbs": [
      "Weekly materials",
      "Week 3 - Data & Control Structures"
    ]
  },
  {
    "objectID": "weeks/week-03.html#prepare-for-class",
    "href": "weeks/week-03.html#prepare-for-class",
    "title": "Week 3: Data and Control Structures",
    "section": "",
    "text": "Work through the examples in the textbook",
    "crumbs": [
      "Weekly materials",
      "Week 3 - Data & Control Structures"
    ]
  },
  {
    "objectID": "weeks/week-03.html#tuesday",
    "href": "weeks/week-03.html#tuesday",
    "title": "Week 3: Data and Control Structures",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 3 - Data & Control Structures"
    ]
  },
  {
    "objectID": "weeks/week-03.html#thursday",
    "href": "weeks/week-03.html#thursday",
    "title": "Week 3: Data and Control Structures",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 3 - Data & Control Structures"
    ]
  },
  {
    "objectID": "weeks/week-03.html#practice-your-skills",
    "href": "weeks/week-03.html#practice-your-skills",
    "title": "Week 3: Data and Control Structures",
    "section": "",
    "text": "Homework 3",
    "crumbs": [
      "Weekly materials",
      "Week 3 - Data & Control Structures"
    ]
  },
  {
    "objectID": "weeks/week-05.html",
    "href": "weeks/week-05.html",
    "title": "Week 5: Reading and Exploring Data",
    "section": "",
    "text": "For Class:\n\nData Input\nBasic Data Visualization\nExploratory Data Analysis\n\nExtra Resources:\n\nPython for R Users\n\nContext:\n\nChapter 1: “Scratching Down Numbers” from Exploratory Data Analysis, by John Tukey\nChapter 5: “Plots of Relationship” from Exploratory Data Analysis, by John Tukey\n\nThink about:\n\nWhat do you think about Tukey’s approach to exploratory data analysis?\nWhat new ways to use Stem and Leaf plots did you see?\nHow has the use of computers made EDA easier? Harder?\nHow does EDA change when it’s easy to make new plots? Is that change good, bad, mixed, or neutral?\n\n\n\n\nReading Quiz Week 5\n\n\n\n\n\n\nWork through the examples in the textbook\n\n\n\n\n\nSlides\n\n\n\n\n\nSlides\n\n\n\n\n\nHomework 5",
    "crumbs": [
      "Weekly materials",
      "Week 5 - Reading Data"
    ]
  },
  {
    "objectID": "weeks/week-05.html#reading",
    "href": "weeks/week-05.html#reading",
    "title": "Week 5: Reading and Exploring Data",
    "section": "",
    "text": "For Class:\n\nData Input\nBasic Data Visualization\nExploratory Data Analysis\n\nExtra Resources:\n\nPython for R Users\n\nContext:\n\nChapter 1: “Scratching Down Numbers” from Exploratory Data Analysis, by John Tukey\nChapter 5: “Plots of Relationship” from Exploratory Data Analysis, by John Tukey\n\nThink about:\n\nWhat do you think about Tukey’s approach to exploratory data analysis?\nWhat new ways to use Stem and Leaf plots did you see?\nHow has the use of computers made EDA easier? Harder?\nHow does EDA change when it’s easy to make new plots? Is that change good, bad, mixed, or neutral?\n\n\n\n\nReading Quiz Week 5",
    "crumbs": [
      "Weekly materials",
      "Week 5 - Reading Data"
    ]
  },
  {
    "objectID": "weeks/week-05.html#prepare-for-class",
    "href": "weeks/week-05.html#prepare-for-class",
    "title": "Week 5: Reading and Exploring Data",
    "section": "",
    "text": "Work through the examples in the textbook",
    "crumbs": [
      "Weekly materials",
      "Week 5 - Reading Data"
    ]
  },
  {
    "objectID": "weeks/week-05.html#tuesday",
    "href": "weeks/week-05.html#tuesday",
    "title": "Week 5: Reading and Exploring Data",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 5 - Reading Data"
    ]
  },
  {
    "objectID": "weeks/week-05.html#thursday",
    "href": "weeks/week-05.html#thursday",
    "title": "Week 5: Reading and Exploring Data",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 5 - Reading Data"
    ]
  },
  {
    "objectID": "weeks/week-05.html#practice-your-skills",
    "href": "weeks/week-05.html#practice-your-skills",
    "title": "Week 5: Reading and Exploring Data",
    "section": "",
    "text": "Homework 5",
    "crumbs": [
      "Weekly materials",
      "Week 5 - Reading Data"
    ]
  },
  {
    "objectID": "weeks/week-07.html",
    "href": "weeks/week-07.html",
    "title": "Week 7: Data Joins &Transformations",
    "section": "",
    "text": "For Class:\n\nReshaping Data\nJoining Data\nNormal Forms of Data (optional, but useful)\n\nContext:\n\nChapter 6: “The Numbers Don’t Speak For Themselves” of Data Feminism by Catherine D’Ignazio and Lauren Klein\n\nNote: I assign one or two chapters from Data Feminism in Stat 850 because the authors made me think differently about data. I don’t necessarily agree with everything they say, and I certainly don’t expect you to agree with them either - I want you to stretch your brains and consider things from a different perspective.\nThink about:\n\nDo you agree/disagree with the assertion that the context of the data matters?\nHow does maintaining good data documentation contribute to data context? What problems does it not solve?\nDo you prefer working with raw data? cooked data? What are the advantages and disadvantages of each approach?\n\n\n\n\nReading Quiz Week 7\n\n\n\n\n\n\nWork through the examples in the textbook\n\n\n\n\n\nSlides\n\n\n\n\n\nSlides\n\n\n\n\n\nHomework 7",
    "crumbs": [
      "Weekly materials",
      "Week 7 - Data Joins"
    ]
  },
  {
    "objectID": "weeks/week-07.html#reading",
    "href": "weeks/week-07.html#reading",
    "title": "Week 7: Data Joins &Transformations",
    "section": "",
    "text": "For Class:\n\nReshaping Data\nJoining Data\nNormal Forms of Data (optional, but useful)\n\nContext:\n\nChapter 6: “The Numbers Don’t Speak For Themselves” of Data Feminism by Catherine D’Ignazio and Lauren Klein\n\nNote: I assign one or two chapters from Data Feminism in Stat 850 because the authors made me think differently about data. I don’t necessarily agree with everything they say, and I certainly don’t expect you to agree with them either - I want you to stretch your brains and consider things from a different perspective.\nThink about:\n\nDo you agree/disagree with the assertion that the context of the data matters?\nHow does maintaining good data documentation contribute to data context? What problems does it not solve?\nDo you prefer working with raw data? cooked data? What are the advantages and disadvantages of each approach?\n\n\n\n\nReading Quiz Week 7",
    "crumbs": [
      "Weekly materials",
      "Week 7 - Data Joins"
    ]
  },
  {
    "objectID": "weeks/week-07.html#prepare-for-class",
    "href": "weeks/week-07.html#prepare-for-class",
    "title": "Week 7: Data Joins &Transformations",
    "section": "",
    "text": "Work through the examples in the textbook",
    "crumbs": [
      "Weekly materials",
      "Week 7 - Data Joins"
    ]
  },
  {
    "objectID": "weeks/week-07.html#tuesday",
    "href": "weeks/week-07.html#tuesday",
    "title": "Week 7: Data Joins &Transformations",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 7 - Data Joins"
    ]
  },
  {
    "objectID": "weeks/week-07.html#thursday",
    "href": "weeks/week-07.html#thursday",
    "title": "Week 7: Data Joins &Transformations",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 7 - Data Joins"
    ]
  },
  {
    "objectID": "weeks/week-07.html#practice-your-skills",
    "href": "weeks/week-07.html#practice-your-skills",
    "title": "Week 7: Data Joins &Transformations",
    "section": "",
    "text": "Homework 7",
    "crumbs": [
      "Weekly materials",
      "Week 7 - Data Joins"
    ]
  },
  {
    "objectID": "weeks/week-09.html",
    "href": "weeks/week-09.html",
    "title": "Week 9: Fall Break & Midterm Exam",
    "section": "",
    "text": "No Class – Fall Break!\n\n\n\nMidterm Exam",
    "crumbs": [
      "Weekly materials",
      "Week 9 - Midterm Exam"
    ]
  },
  {
    "objectID": "weeks/week-09.html#tuesday",
    "href": "weeks/week-09.html#tuesday",
    "title": "Week 9: Fall Break & Midterm Exam",
    "section": "",
    "text": "No Class – Fall Break!",
    "crumbs": [
      "Weekly materials",
      "Week 9 - Midterm Exam"
    ]
  },
  {
    "objectID": "weeks/week-09.html#thursday",
    "href": "weeks/week-09.html#thursday",
    "title": "Week 9: Fall Break & Midterm Exam",
    "section": "",
    "text": "Midterm Exam",
    "crumbs": [
      "Weekly materials",
      "Week 9 - Midterm Exam"
    ]
  },
  {
    "objectID": "weeks/week-11.html",
    "href": "weeks/week-11.html",
    "title": "Week 11: Functional Programming",
    "section": "",
    "text": "For Class:\n\nFunctional Programming More practice with list processing, using JSON and XML files.\n\nContext:\n\nFunctional Programming (Advanced R)\nWhy Functional Programming Should Be the Future of Software\nWhat is a Monad?\n\nOptional: Functional Programming HOWTO (Python)\nOptional: Record-based Data and List Processing Strategies\n\n\n\n\nReading Quiz Week 11\n\n\n\n\n\n\nWork through the examples in the textbook\n\n\n\n\n\nSlides\n\n\n\n\n\nSlides",
    "crumbs": [
      "Weekly materials",
      "Week 11 - Functional Prog."
    ]
  },
  {
    "objectID": "weeks/week-11.html#reading",
    "href": "weeks/week-11.html#reading",
    "title": "Week 11: Functional Programming",
    "section": "",
    "text": "For Class:\n\nFunctional Programming More practice with list processing, using JSON and XML files.\n\nContext:\n\nFunctional Programming (Advanced R)\nWhy Functional Programming Should Be the Future of Software\nWhat is a Monad?\n\nOptional: Functional Programming HOWTO (Python)\nOptional: Record-based Data and List Processing Strategies\n\n\n\n\nReading Quiz Week 11",
    "crumbs": [
      "Weekly materials",
      "Week 11 - Functional Prog."
    ]
  },
  {
    "objectID": "weeks/week-11.html#prepare-for-class",
    "href": "weeks/week-11.html#prepare-for-class",
    "title": "Week 11: Functional Programming",
    "section": "",
    "text": "Work through the examples in the textbook",
    "crumbs": [
      "Weekly materials",
      "Week 11 - Functional Prog."
    ]
  },
  {
    "objectID": "weeks/week-11.html#tuesday",
    "href": "weeks/week-11.html#tuesday",
    "title": "Week 11: Functional Programming",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 11 - Functional Prog."
    ]
  },
  {
    "objectID": "weeks/week-11.html#thursday",
    "href": "weeks/week-11.html#thursday",
    "title": "Week 11: Functional Programming",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 11 - Functional Prog."
    ]
  },
  {
    "objectID": "weeks/week-13.html",
    "href": "weeks/week-13.html",
    "title": "Week 13: Simulation",
    "section": "",
    "text": "For Class:\n\nMonte Carlo Simulation\nProbability Theory Shown by Simulation (Optional)\nResampling Methods (Optional)\n\nHistorically, students have a very hard time with the simulation question on the statistics qualifier. I’m experimenting this year with some ways to reinforce this material, despite the fact that you’ll be asked to apply simulation to models and use cases you may not have learned yet, since Stat 850 is taken during your first semester. This book is a good resource for you to keep in mind when studying for the qualifying exam and is available online for free through the library.\nOther Resources:\n\nStatistical Simulation - ~1h long lecture on statistical model simulation\nThe Strange Math That Predicts Almost Anything - ~30 minutes, Importance of Monte Carlo Simulation\n\n\n\n\nReading Quiz Week 13\n\n\n\n\n\n\nWork through the examples in the textbook\n\n\n\n\n\nSlides\n\n\n\n\n\nSlides",
    "crumbs": [
      "Weekly materials",
      "Week 13 - Simulation"
    ]
  },
  {
    "objectID": "weeks/week-13.html#reading",
    "href": "weeks/week-13.html#reading",
    "title": "Week 13: Simulation",
    "section": "",
    "text": "For Class:\n\nMonte Carlo Simulation\nProbability Theory Shown by Simulation (Optional)\nResampling Methods (Optional)\n\nHistorically, students have a very hard time with the simulation question on the statistics qualifier. I’m experimenting this year with some ways to reinforce this material, despite the fact that you’ll be asked to apply simulation to models and use cases you may not have learned yet, since Stat 850 is taken during your first semester. This book is a good resource for you to keep in mind when studying for the qualifying exam and is available online for free through the library.\nOther Resources:\n\nStatistical Simulation - ~1h long lecture on statistical model simulation\nThe Strange Math That Predicts Almost Anything - ~30 minutes, Importance of Monte Carlo Simulation\n\n\n\n\nReading Quiz Week 13",
    "crumbs": [
      "Weekly materials",
      "Week 13 - Simulation"
    ]
  },
  {
    "objectID": "weeks/week-13.html#prepare-for-class",
    "href": "weeks/week-13.html#prepare-for-class",
    "title": "Week 13: Simulation",
    "section": "",
    "text": "Work through the examples in the textbook",
    "crumbs": [
      "Weekly materials",
      "Week 13 - Simulation"
    ]
  },
  {
    "objectID": "weeks/week-13.html#tuesday",
    "href": "weeks/week-13.html#tuesday",
    "title": "Week 13: Simulation",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 13 - Simulation"
    ]
  },
  {
    "objectID": "weeks/week-13.html#thursday",
    "href": "weeks/week-13.html#thursday",
    "title": "Week 13: Simulation",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 13 - Simulation"
    ]
  },
  {
    "objectID": "weeks/week-15.html",
    "href": "weeks/week-15.html",
    "title": "Week 15: Interactive Graphics",
    "section": "",
    "text": "For Class:\n\nAnimated and Interactive Graphics\n\nContext:\n\nThe Tiger Mom Tax\nRent Going Up? One Company’s Algorithm Could Be Why\nRacial Discrimination in Face Recognition Technology\nMachine Bias\n\nThink about:\n\nWhen is it ethical to use an algorithm to make decisions?\nWhen is it unethical to use an algorithm to make decisions?\nWhat conditions need to exist for an algorithm to be trustworthy?\nHow do you, as a statistician, ensure that you understand the biases in your models?\n\n\n\n\nReading Quiz Week 15\n\n\n\n\n\n\nWork through the examples in the textbook\n\n\n\n\n\nSlides\n\n\n\n\n\nSlides",
    "crumbs": [
      "Weekly materials",
      "Week 15 - Interactive Graphics"
    ]
  },
  {
    "objectID": "weeks/week-15.html#reading",
    "href": "weeks/week-15.html#reading",
    "title": "Week 15: Interactive Graphics",
    "section": "",
    "text": "For Class:\n\nAnimated and Interactive Graphics\n\nContext:\n\nThe Tiger Mom Tax\nRent Going Up? One Company’s Algorithm Could Be Why\nRacial Discrimination in Face Recognition Technology\nMachine Bias\n\nThink about:\n\nWhen is it ethical to use an algorithm to make decisions?\nWhen is it unethical to use an algorithm to make decisions?\nWhat conditions need to exist for an algorithm to be trustworthy?\nHow do you, as a statistician, ensure that you understand the biases in your models?\n\n\n\n\nReading Quiz Week 15",
    "crumbs": [
      "Weekly materials",
      "Week 15 - Interactive Graphics"
    ]
  },
  {
    "objectID": "weeks/week-15.html#prepare-for-class",
    "href": "weeks/week-15.html#prepare-for-class",
    "title": "Week 15: Interactive Graphics",
    "section": "",
    "text": "Work through the examples in the textbook",
    "crumbs": [
      "Weekly materials",
      "Week 15 - Interactive Graphics"
    ]
  },
  {
    "objectID": "weeks/week-15.html#tuesday",
    "href": "weeks/week-15.html#tuesday",
    "title": "Week 15: Interactive Graphics",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 15 - Interactive Graphics"
    ]
  },
  {
    "objectID": "weeks/week-15.html#thursday",
    "href": "weeks/week-15.html#thursday",
    "title": "Week 15: Interactive Graphics",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Weekly materials",
      "Week 15 - Interactive Graphics"
    ]
  },
  {
    "objectID": "weeks/week-17.html",
    "href": "weeks/week-17.html",
    "title": "Week 17: Final Exam",
    "section": "",
    "text": "Everything!"
  },
  {
    "objectID": "weeks/week-17.html#reading",
    "href": "weeks/week-17.html#reading",
    "title": "Week 17: Final Exam",
    "section": "",
    "text": "Everything!"
  },
  {
    "objectID": "homework-templates/02/index.html",
    "href": "homework-templates/02/index.html",
    "title": "Homework: Finding Your Way in R and Python",
    "section": "",
    "text": "Instructions: Once you have finished this assignment, render the document (Ctrl/Cmd-Shift-K or the Render button). Commit the qmd file and any other files you have changed to the repository and push your changes.\nIn Canvas, submit a link to your github repository containing the updated files.\nNote: Submitting your link in Canvas lets me know that you are ready for me to grade your homework. You can commit half-finished or not-working homework to GitHub, and it is good practice to commit frequently (at least at the end of each work session)."
  },
  {
    "objectID": "homework-templates/02/index.html#pythagorean-theorem-in-r",
    "href": "homework-templates/02/index.html#pythagorean-theorem-in-r",
    "title": "Homework: Finding Your Way in R and Python",
    "section": "Pythagorean Theorem in R",
    "text": "Pythagorean Theorem in R\n\\[a^2 + b^2 = c^2\\]\nUse the chunk below to define variables \\(a\\), \\(b\\), and \\(c\\), where you define values (of your choice) for \\(a\\) and \\(b\\). Based on the choice of \\(a\\) and \\(b\\), determine \\(c\\) using the mathematical formula. You may need to find the square root function in R to make this work.\n\n# Your pythagorean theorem code goes here"
  },
  {
    "objectID": "homework-templates/02/index.html#quadratic-formula-in-python",
    "href": "homework-templates/02/index.html#quadratic-formula-in-python",
    "title": "Homework: Finding Your Way in R and Python",
    "section": "Quadratic Formula in Python",
    "text": "Quadratic Formula in Python\n\\[x = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}\\]\nUse the chunk below to define variables \\(a\\), \\(b\\), and \\(c\\), and then define \\(x1\\) and \\(x2\\), the possible values for \\(x\\). You may find it helpful to define a few additional variables, such as the value of the discriminant \\(\\sqrt{b^2 - 4ac}\\), to make it easier to calculate the results.\n\n# Your quadratic formula code goes here"
  },
  {
    "objectID": "homework-templates/04/index.html",
    "href": "homework-templates/04/index.html",
    "title": "Homework: Data Programming",
    "section": "",
    "text": "Instructions:"
  },
  {
    "objectID": "homework-templates/04/index.html#r",
    "href": "homework-templates/04/index.html#r",
    "title": "Homework: Data Programming",
    "section": "R",
    "text": "R\n\nmonth.name is a built-in vector containing month names that you can use to create a factor variable. Factor variables can be easily converted into numeric variables. This might help you get a numeric month, which might help you get to a fractional year.\nsubset() is a function that will subset a data frame based on a logical condition. It might be easier to use than logical indexing (though you can use either). You can also use the filter function in the dplyr package.\nTo get a line graph in ggplot2, use geom_line(). Using aes(color = varname) will color the lines by variable name.\nSome sample code to make a line graph in ggplot is provided below:\n\n\nlibrary(dplyr)\n# Get only January months so that there's one point a year\njan_data &lt;- subset(games, month == \"January\")\n\n# x axis is year, y axis is average players\n# group = gamename says draw one line for each game\nggplot(data = jan_data, \n       aes(x = year, y = avg, group = gamename)) + \n  geom_line()"
  },
  {
    "objectID": "homework-templates/04/index.html#python",
    "href": "homework-templates/04/index.html#python",
    "title": "Homework: Data Programming",
    "section": "Python",
    "text": "Python\n\nThe time module contains the strptime function, which may help you to get from month name to month number.\nPandas will let you sort a data frame in decreasing order of variable x using sort_values('x', ascending = False)\nYou can select rows of a python data frame that match a list using .isin() demo. Alternately, Pandas data frames have a method df.query() that allows you to pass a logical condition and select rows based on that. This may be easier to use than logical indexing (though you can use either).\nUsing the .assign() function to create new variables will reduce the number of errors you run into.\nTo get a line graph in plotnine, which is a clone of ggplot2 for python, use geom_line(). Using aes(color = 'varname') will color the lines by variable name. Some sample code to make a line graph in ggplot is provided below:\n\n\n# Get only January months so that there's one point a year\njan_data = games.query('month == \"January\"')\n\n# x axis is year, y axis is average players\n# group = gamename says draw one line for each game\n(\n  ggplot(jan_data, \n       aes(x = 'year', y = 'avg', group = 'gamename')) + \n  geom_line()\n)\n\n&lt;plotnine.ggplot.ggplot object at 0x7f58901e28d0&gt;"
  },
  {
    "objectID": "homework-templates/06/checkpoints.html",
    "href": "homework-templates/06/checkpoints.html",
    "title": "Poetry Checkpoints",
    "section": "",
    "text": "Here is some example formatted output from a poem selected from each poet’s works to give you an idea of what I am expecting your code to produce (for all of the poems, not just for one single poem).\n\n\n\n\nlink\n\"Poem for a Friend\"\n\nI know that I don't always see you enough -  \nWith work and with kids and a marriage, it's tough.  \nYou wake and you take it by dawn and by day -  \nAnd noon turns to evening, and time slips away. \n\n\"We'll have to do something,\" we said when we met -  \nBut you and me, brother, we tend to forget.  \nWe're working -  \nwe're busy -  \nwe both try our best -  \nAnd life doesn't always leave room for the rest.  \n\nBut then, with a smile, I remember it's you.  \nWe say that we'll meet, and eventually do.  \nYou're there when I need you, and that doesn't end.  \nSo buddy, be seeing you... \n\nmaybe.\n\nYour friend.\n\n^^^:)\n\n\n\nI’ve selected just a few of the original columns to go along with the new columns created while answering this question.\n\n\n\n\n\n\n\n\n\n\n\n\n\ndate_utc\ntimestamp\nsubreddit\npoem_id\nline_no\nlines\n\n\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n1\n&gt; “Poem for a Friend”\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n2\nNA\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n3\nI know that I don’t always see you enough -\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n4\nWith work and with kids and a marriage, it’s tough.\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n5\nYou wake and you take it by dawn and by day -\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n6\nAnd noon turns to evening, and time slips away.\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n7\nNA\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n8\n“We’ll have to do something,” we said when we met -\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n9\nBut you and me, brother, we tend to forget.\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n10\nWe’re working -\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n11\nwe’re busy -\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n12\nwe both try our best -\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n13\nAnd life doesn’t always leave room for the rest.\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n14\nNA\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n15\nBut then, with a smile, I remember it’s you.\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n16\nWe say that we’ll meet, and eventually do.\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n17\nYou’re there when I need you, and that doesn’t end.\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n18\nSo buddy, be seeing you…\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n19\nNA\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n20\nmaybe.\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n21\nNA\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n22\nYour friend.\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n23\nNA\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n24\n&nbsp;\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n25\nNA\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n26\n^^^:)\n\n\n\n\n\n\n\n\n\n\n\nlink\n``` &gt; ‘You gotta spoil her rotten’\ni was the pup, forgotten,\nlived my life out on a chain\nyou say you’ll SpOiL me RoTtEn ?\nthose are new words for my brain!\ndon’t think that i did nothing wrong,\nbut now that i am here\ni feel like This where i belong -\nthese humans Like me near!\nam learning ‘bout this thing called ’trust’\ni never felt before\nif This is ‘spoil’, then Please - you Must!\n(it’s Good, i’m pretty sure…)\nmy life has been so sad, n tough,\nyou give me Hope anew\nYou make me feel I’m Good enough -\nYou made my Dreams come True!\n❤️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndate_utc\ntimestamp\nsubreddit\npoem_id\nline_no\nlines\n\n\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n1\n&gt; ‘You gotta spoil her rotten’\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n2\n——\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n3\ni was the pup, forgotten,\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n4\nlived my life out on a chain\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n5\nyou say you’ll SpOiL me RoTtEn ?\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n6\nthose are new words for my brain!\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n7\ndon’t think that i did nothing wrong,\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n8\nbut now that i am here\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n9\ni feel like This where i belong -\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n10\nthese humans Like me near!"
  },
  {
    "objectID": "homework-templates/06/checkpoints.html#sprog-poem-1",
    "href": "homework-templates/06/checkpoints.html#sprog-poem-1",
    "title": "Poetry Checkpoints",
    "section": "",
    "text": "link\n\"Poem for a Friend\"\n\nI know that I don't always see you enough -  \nWith work and with kids and a marriage, it's tough.  \nYou wake and you take it by dawn and by day -  \nAnd noon turns to evening, and time slips away. \n\n\"We'll have to do something,\" we said when we met -  \nBut you and me, brother, we tend to forget.  \nWe're working -  \nwe're busy -  \nwe both try our best -  \nAnd life doesn't always leave room for the rest.  \n\nBut then, with a smile, I remember it's you.  \nWe say that we'll meet, and eventually do.  \nYou're there when I need you, and that doesn't end.  \nSo buddy, be seeing you... \n\nmaybe.\n\nYour friend.\n\n^^^:)\n\n\n\nI’ve selected just a few of the original columns to go along with the new columns created while answering this question.\n\n\n\n\n\n\n\n\n\n\n\n\n\ndate_utc\ntimestamp\nsubreddit\npoem_id\nline_no\nlines\n\n\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n1\n&gt; “Poem for a Friend”\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n2\nNA\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n3\nI know that I don’t always see you enough -\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n4\nWith work and with kids and a marriage, it’s tough.\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n5\nYou wake and you take it by dawn and by day -\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n6\nAnd noon turns to evening, and time slips away.\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n7\nNA\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n8\n“We’ll have to do something,” we said when we met -\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n9\nBut you and me, brother, we tend to forget.\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n10\nWe’re working -\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n11\nwe’re busy -\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n12\nwe both try our best -\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n13\nAnd life doesn’t always leave room for the rest.\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n14\nNA\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n15\nBut then, with a smile, I remember it’s you.\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n16\nWe say that we’ll meet, and eventually do.\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n17\nYou’re there when I need you, and that doesn’t end.\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n18\nSo buddy, be seeing you…\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n19\nNA\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n20\nmaybe.\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n21\nNA\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n22\nYour friend.\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n23\nNA\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n24\n&nbsp;\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n25\nNA\n\n\n2020-05-16\n1589635111\nAskReddit\n1\n26\n^^^:)"
  },
  {
    "objectID": "homework-templates/06/checkpoints.html#schnoodle-poem-1",
    "href": "homework-templates/06/checkpoints.html#schnoodle-poem-1",
    "title": "Poetry Checkpoints",
    "section": "",
    "text": "link\n``` &gt; ‘You gotta spoil her rotten’\ni was the pup, forgotten,\nlived my life out on a chain\nyou say you’ll SpOiL me RoTtEn ?\nthose are new words for my brain!\ndon’t think that i did nothing wrong,\nbut now that i am here\ni feel like This where i belong -\nthese humans Like me near!\nam learning ‘bout this thing called ’trust’\ni never felt before\nif This is ‘spoil’, then Please - you Must!\n(it’s Good, i’m pretty sure…)\nmy life has been so sad, n tough,\nyou give me Hope anew\nYou make me feel I’m Good enough -\nYou made my Dreams come True!\n❤️\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndate_utc\ntimestamp\nsubreddit\npoem_id\nline_no\nlines\n\n\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n1\n&gt; ‘You gotta spoil her rotten’\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n2\n——\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n3\ni was the pup, forgotten,\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n4\nlived my life out on a chain\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n5\nyou say you’ll SpOiL me RoTtEn ?\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n6\nthose are new words for my brain!\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n7\ndon’t think that i did nothing wrong,\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n8\nbut now that i am here\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n9\ni feel like This where i belong -\n\n\n2022-06-01\n1654103896\nvelvethippos\n1\n10\nthese humans Like me near!"
  },
  {
    "objectID": "homework-templates/06/checkpoints.html#sprog-poem-summary",
    "href": "homework-templates/06/checkpoints.html#sprog-poem-summary",
    "title": "Poetry Checkpoints",
    "section": "Sprog Poem Summary",
    "text": "Sprog Poem Summary\n\n\n\n\n\npoem_id\nwords\nnonletters\nuppercase\nlowercase\nlines\n\n\n\n\n1\n4.500000\n51\n18\n420\n26\n\n\n2\n5.636364\n48\n18\n459\n22\n\n\n3\n4.312500\n23\n16\n259\n16\n\n\n4\n4.607143\n45\n22\n503\n28\n\n\n5\n4.714286\n18\n8\n124\n7\n\n\n6\n7.777778\n34\n7\n296\n9"
  },
  {
    "objectID": "homework-templates/06/checkpoints.html#schnoodle-poem-summary",
    "href": "homework-templates/06/checkpoints.html#schnoodle-poem-summary",
    "title": "Poetry Checkpoints",
    "section": "Schnoodle Poem Summary",
    "text": "Schnoodle Poem Summary\n\n\n\n\n\npoem_id\nwords\nnonletters\nuppercase\nlowercase\nlines\n\n\n\n\n1\n5.789474\n52\n20\n393\n19\n\n\n2\n4.346154\n54\n31\n413\n26\n\n\n3\n5.428571\n33\n1\n290\n14\n\n\n4\n4.680000\n54\n7\n446\n25\n\n\n5\n4.833333\n30\n8\n215\n12\n\n\n6\n4.736842\n83\n59\n254\n19"
  },
  {
    "objectID": "homework-templates/07/index.html",
    "href": "homework-templates/07/index.html",
    "title": "Homework: Murder in SQL City",
    "section": "",
    "text": "Northwestern University’s Knight lab created a SQL murder mystery to help users sharpen their database skills by solving the crime that happened at SQL city. There are tables with different pieces of information - social media checkins, people, drivers licenses, crime scene reports, police interviews, and more.\nPick R or Python, and solve the murder mystery, showing all of your work in this document.\nYour solution must be reproducible – that is, you should use dplyr verbs, table joins, etc. to solve the mystery, rather than just looking through the tables yourselves.\nYou may work in groups of 2-4 people on this assignment. Each person should turn in their own assignment, but should list their group members as authors.\nMake sure you do your due diligence! You should double check your answer and print out the guilty party’s interview from the database.\nWhen you are finished with the assignment:\n\nOnce you have finished this assignment, render the document (Ctrl/Cmd-Shift-K or the Render button).\nCommit the qmd file and any other files you have changed to the repository and push your changes.\nIn Canvas, submit a link to your github repository containing the updated files.\nProvide the name of the guilty party in the text input field on Canvas, and make sure all of your work is on GitHub to receive full credit.\n\nThe chunks below use the code to read in each of the 8 tables of data for this assignment.\nHints:\n\nYou can use a lot of filter statements, but it will in many cases be easier to use joins.\nSee if you can write code that doesn’t require you to type out knowledge gained from a previous clue (e.g. pipe your results from one query into the next)\n\n\nA crime has taken place and the detective needs your help. The detective gave you the crime scene report, but you somehow lost it. You vaguely remember that the crime was a murder that occurred sometime on January 15, 2018 and that it took place in SQL City. All the clues to this mystery are buried in a huge database, and you need to use R and SAS to navigate through this network of information. Your first step to solving the mystery is to retrieve the corresponding crime scene report from the police department’s database.\nThis database schema may help you figure out how to navigate the database:\n\n\n\nsql-murder-mystery database schema diagram"
  },
  {
    "objectID": "homework-templates/07/index.html#instructions",
    "href": "homework-templates/07/index.html#instructions",
    "title": "Homework: Murder in SQL City",
    "section": "",
    "text": "Northwestern University’s Knight lab created a SQL murder mystery to help users sharpen their database skills by solving the crime that happened at SQL city. There are tables with different pieces of information - social media checkins, people, drivers licenses, crime scene reports, police interviews, and more.\nPick R or Python, and solve the murder mystery, showing all of your work in this document.\nYour solution must be reproducible – that is, you should use dplyr verbs, table joins, etc. to solve the mystery, rather than just looking through the tables yourselves.\nYou may work in groups of 2-4 people on this assignment. Each person should turn in their own assignment, but should list their group members as authors.\nMake sure you do your due diligence! You should double check your answer and print out the guilty party’s interview from the database.\nWhen you are finished with the assignment:\n\nOnce you have finished this assignment, render the document (Ctrl/Cmd-Shift-K or the Render button).\nCommit the qmd file and any other files you have changed to the repository and push your changes.\nIn Canvas, submit a link to your github repository containing the updated files.\nProvide the name of the guilty party in the text input field on Canvas, and make sure all of your work is on GitHub to receive full credit.\n\nThe chunks below use the code to read in each of the 8 tables of data for this assignment.\nHints:\n\nYou can use a lot of filter statements, but it will in many cases be easier to use joins.\nSee if you can write code that doesn’t require you to type out knowledge gained from a previous clue (e.g. pipe your results from one query into the next)\n\n\nA crime has taken place and the detective needs your help. The detective gave you the crime scene report, but you somehow lost it. You vaguely remember that the crime was a murder that occurred sometime on January 15, 2018 and that it took place in SQL City. All the clues to this mystery are buried in a huge database, and you need to use R and SAS to navigate through this network of information. Your first step to solving the mystery is to retrieve the corresponding crime scene report from the police department’s database.\nThis database schema may help you figure out how to navigate the database:\n\n\n\nsql-murder-mystery database schema diagram"
  },
  {
    "objectID": "homework-templates/07/index.html#r",
    "href": "homework-templates/07/index.html#r",
    "title": "Homework: Murder in SQL City",
    "section": "R",
    "text": "R\n\nlibrary(RSQLite)\nlibrary(DBI)\n\n# Your database connection code goes here. Store the connection as con \ncon &lt;- dbConnect(RSQLite::SQLite(), \"sql-murder-mystery.db\")\n\ntable_names &lt;- c(\"crime_scene_report\", \n                 \"drivers_license\", \n                 \"facebook_event_checkin\",\n                 \"get_fit_now_check_in\", \n                 \"get_fit_now_member\", \n                 \"income\", \n                 \"interview\",\n                 \"person\")\n\n# For each table name, read the tables in and store them as the name of the table\npurrr::walk(table_names, function(x) {\n  assign(x, dbReadTable(con, x), envir = .GlobalEnv)\n})\n\n# close the connection when you're done\ndbDisconnect(con)"
  },
  {
    "objectID": "homework-templates/07/index.html#python",
    "href": "homework-templates/07/index.html#python",
    "title": "Homework: Murder in SQL City",
    "section": "Python",
    "text": "Python\n\nimport pandas as pd\nimport sqlite3\n\n# Read sqlite query results into a pandas DataFrame\ncon = sqlite3.connect(\"sql-murder-mystery.db\")\n\ncrime_scene_report = pd.read_sql_query(\"SELECT * from crime_scene_report\", con)\ndrivers_license = pd.read_sql_query(\"SELECT * from drivers_license\", con)\nfacebook_event_checkin = pd.read_sql_query(\"SELECT * from facebook_event_checkin\", con)\nget_fit_now_check_in = pd.read_sql_query(\"SELECT * from get_fit_now_check_in\", con)\nget_fit_now_member = pd.read_sql_query(\"SELECT * from get_fit_now_member\", con)\nincome = pd.read_sql_query(\"SELECT * from income\", con)\ninterview = pd.read_sql_query(\"SELECT * from interview\", con)\nperson = pd.read_sql_query(\"SELECT * from person\", con)\n\n# Verify that result of SQL query is stored in the dataframe\nprint(crime_scene_report.head())\n\n       date  ...      city\n0  20180115  ...       NYC\n1  20180115  ...    Albany\n2  20180115  ...      Reno\n3  20180215  ...  SQL City\n4  20180215  ...  SQL City\n\n[5 rows x 4 columns]\n\n\ncon.close()"
  },
  {
    "objectID": "homework/01.html",
    "href": "homework/01.html",
    "title": "👋 The Basics of GitHub",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom."
  },
  {
    "objectID": "homework/01.html#course-overview-and-learning-outcomes",
    "href": "homework/01.html#course-overview-and-learning-outcomes",
    "title": "👋 The Basics of GitHub",
    "section": "🤓 Course overview and learning outcomes",
    "text": "🤓 Course overview and learning outcomes\nThe goal of this course is to give you a brief introduction to GitHub. We’ll also provide you with materials for further learning and a few ideas to get you started on our platform. 🚀"
  },
  {
    "objectID": "homework/01.html#git-and-github",
    "href": "homework/01.html#git-and-github",
    "title": "👋 The Basics of GitHub",
    "section": "Git and GitHub",
    "text": "Git and GitHub\nGit is a distributed Version Control System (VCS), which means it is a useful tool for easily tracking changes to your code, collaborating, and sharing. With Git you can track the changes you make to your project so you always have a record of what you’ve worked on and can easily revert back to an older version if need be. It also makes working with others easier—groups of people can work together on the same project and merge their changes into one final source!\nGitHub is a way to use the same power of Git all online with an easy-to-use interface. It’s used across the software world and beyond to collaborate and maintain the history of projects.\nGitHub is home to some of the most advanced technologies in the world. Whether you’re visualizing data or building a new game, there’s a whole community and set of tools on GitHub that can get you to the next step. This course starts with the basics of GitHub, but we’ll dig into the rest later."
  },
  {
    "objectID": "homework/01.html#understanding-the-github-flow",
    "href": "homework/01.html#understanding-the-github-flow",
    "title": "👋 The Basics of GitHub",
    "section": "Understanding the GitHub flow",
    "text": "Understanding the GitHub flow\nThe GitHub flow is a lightweight workflow that allows you to experiment and collaborate on your projects easily, without the risk of losing your previous work.\n\nRepositories\nA repository is where your project work happens–think of it as your project folder. It contains all of your project’s files and revision history. You can work within a repository alone or invite others to collaborate with you on those files.\n\n\nCloning\nWhen a repository is created with GitHub, it’s stored remotely in the ☁️. You can clone a repository to create a local copy on your computer and then use Git to sync the two. This makes it easier to fix issues, add or remove files, and push larger commits. You can also use the editing tool of your choice as opposed to the GitHub UI. Cloning a repository also pulls down all the repository data that GitHub has at that point in time, including all versions of every file and folder for the project! This can be helpful if you experiment with your project and then realize you liked a previous version more. To learn more about cloning, read “Cloning a Repository”.\n\n\nCommitting and pushing\nCommitting and pushing are how you can add the changes you made on your local machine to the remote repository in GitHub. That way your instructor and/or teammates can see your latest work when you’re ready to share it. You can make a commit when you have made changes to your project that you want to “checkpoint.” You can also add a helpful commit message to remind yourself or your teammates what work you did (e.g. “Added a README with information about our project”).\nOnce you have a commit or multiple commits that you’re ready to add to your repository, you can use the push command to add those changes to your remote repository. Committing and pushing may feel new at first, but we promise you’ll get used to it 🙂"
  },
  {
    "objectID": "homework/01.html#github-terms-to-know",
    "href": "homework/01.html#github-terms-to-know",
    "title": "👋 The Basics of GitHub",
    "section": "💻 GitHub terms to know",
    "text": "💻 GitHub terms to know\n\nRepositories\nWe mentioned repositories already, they are where your project work happens, but let’s talk a bit more about the details of them! As you work more on GitHub you will have many repositories which may feel confusing at first. Fortunately, your “GitHub dashboard” helps to easily navigate to your repositories and see useful information about them. Make sure you’re logged in to see it!\nRepositories also contain READMEs. You can add a README file to your repository to tell other people why your project is useful, what they can do with your project, and how they can use it. We are using this README to communicate how to learn Git and GitHub with you. 😄 To learn more about repositories read “Creating, Cloning, and Archiving Repositories and “About README’s”.\n\n\nBranches\nYou can use branches on GitHub to isolate work that you do not want merged into your final project just yet. Branches allow you to develop features, fix bugs, or safely experiment with new ideas in a contained area of your repository. Typically, you might create a new branch from the default branch of your repository—main. This makes a new working copy of your repository for you to experiment with. Once your new changes have been reviewed by a teammate, or you are satisfied with them, you can merge your changes into the default branch of your repository. To learn more about branching, read “About Branches”.\nNote: In this class, you will not be required to use branches.\n\n\nForks\nA fork is another way to copy a repository, but is usually used when you want to contribute to someone else’s project. Forking a repository allows you to freely experiment with changes without affecting the original project and is very popular when contributing to open source software projects! To learn more about forking, read “Fork a repo”\nNote: In this class, you will not be required to use forks.\n\n\nPull requests\nWhen working with branches, you can use a pull request to tell others about the changes you want to make and ask for their feedback. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add more changes if need be. You can add specific people as reviewers of your pull request which shows you want their feedback on your changes! Once a pull request is ready-to-go, it can be merged into your main branch. To learn more about pull requests, read “About Pull Requests”.\nNote: In this course, you will not be required to use pull requests.\n\n\nIssues\nIssues are a way to track enhancements, tasks, or bugs for your work on GitHub. Issues are a great way to keep track of all the tasks you want to work on for your project and let others know what you plan to work on. You can also use issues to tell a favorite open source project about a bug you found or a feature you think would be great to add!\nFor larger projects, you can keep track of many issues on a project board. GitHub Projects help you organize and prioritize your work and you can read more about them in this “About Project boards document. You likely won’t need a project board for your assignments, but once you move on to even bigger projects, they’re a great way to organize your team’s work! You can also link together pull requests and issues to show that a fix is in progress and to automatically close the issue when someone merges the pull request. To learn more about issues and linking them to your pull requests, read “About Issues”.\n\n\nYour user profile\nYour profile page tells people the story of your work through the repositories you’re interested in, the contributions you’ve made, and the conversations you’ve had. You can also give the world a unique view into who you are with your profile README. You can use your profile to let future employers know all about you! To learn more about your user profile and adding and updating your profile README, read “Managing Your Profile README”.\n\n\nUsing markdown on GitHub\nYou might have noticed already, but you can add some fun styling to your issues, pull requests, and files. “Markdown” is an easy way to style your issues, pull requests, and files with some simple syntax. This can be helpful to organize your information and make it easier for others to read. You can also drop in gifs and images to help convey your point! To learn more about using GitHub’s flavor of markdown, read “Basic Writing and Formatting Syntax”.\n\n\nEngaging with the GitHub community\nThe GitHub community is vast. There are many types of people who use GitHub in their day to day—students like you, professional developers, hobbyists working on open source projects, and explorers who are just jumping into the world of software development on their own. There are many ways you can interact with the larger GitHub community, but here are three places where you can start.\n\nStarring repositories\nIf you find a repository interesting or you want to keep track of it, star it! When you star a repository it’s also used as a signal to surface better recommendations on github.com/explore. If you’d like to get back to your starred repositories you can do so via your user profile. To learn more about starring repositories, read “Saving Repositories with Stars”.\n\n\nFollowing users\nYou can follow people on GitHub to receive notifications about their activity and discover projects in their communities. When you follow a user, their public GitHub activity will show up on your dashboard so you can see all the cool things they are working on. To learn more about following users, read “Following People”.\n\n\nBrowsing GitHub Explore\nGitHub Explore is a great place to do just that … explore :smile: You can find new projects, events, and developers to interact with.\nYou can check out the GitHub Explore website at github.com/explore. The more you intereact with GitHub the more tailored your Explore view will be."
  },
  {
    "objectID": "homework/01.html#next-steps",
    "href": "homework/01.html#next-steps",
    "title": "👋 The Basics of GitHub",
    "section": "📝 Next steps",
    "text": "📝 Next steps\n\nClone this repository to your local machine\nOn your local machine, create a new markdown file in this repository named ‘About_Me.md’. Provide a short biography/introduction for yourself and use markdown formatting\n\nMarkdown Basics provides an overview of different formatting options in markdown.\nYou must use at least the following formatting elements: header, subheader, bold or italic, bulleted list, and an image.\n\nCommit your changes to your new file locally and push them back to your github repository. Check on Github to make sure the new file appears.\nTo get full credit for your assignment, you will need to have worked with your git repository locally. I will be able to see if you have used the github editor to make your changes instead :)."
  },
  {
    "objectID": "homework/01.html#resources",
    "href": "homework/01.html#resources",
    "title": "👋 The Basics of GitHub",
    "section": "📚 Resources",
    "text": "📚 Resources\n\nA short video explaining what GitHub is\nGit and GitHub learning resources\nUnderstanding the GitHub flow\nHow to use GitHub branches\nInteractive Git training materials\nGitHub’s Learning Lab\nEducation community forum\nGitHub community forum"
  },
  {
    "objectID": "homework/01.html#optional-extra-steps",
    "href": "homework/01.html#optional-extra-steps",
    "title": "👋 The Basics of GitHub",
    "section": "Optional extra steps",
    "text": "Optional extra steps\n\nCreate your profile README. Let the world know a little bit more about you! What are you interested in learning? What are you working on? What’s your favorite hobby? Learn more about creating your profile README in the document, “Managing Your Profile README”.\nGo to your user dashboard and create a new repository. Experiment with the features within that repository to familiarize yourself with them.\nLet us know what you liked or didn’t like about the content of this course. What would you like to see more of? What would be interesting or helpful to your learning journey?"
  },
  {
    "objectID": "homework/03.html",
    "href": "homework/03.html",
    "title": "Homework: Fizzbuzz",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom.\nInstructions:\n\nYou can answer the questions below in either R or Python. I will give you 50% extra credit if you provide answers in both languages. Otherwise, please feel free to delete the code chunks corresponding to the language you don’t wish to work in.\nOnce you have finished this assignment, render the document (Ctrl/Cmd-Shift-K or the Render button).\nCommit the qmd file and any other files you have changed to the repository and push your changes.\nIn Canvas, submit a link to your github repository containing the updated files.\n\n\nIntroduction to Fizzbuzz\nThe “FizzBuzz Test” is a famous programming interview question.\n\nWrite a program that prints the numbers from 1 to 30. But for multiples of three print “Fizz” instead of the number and for the multiples of five print “Buzz”. For numbers which are multiples of both three and five print “FizzBuzz”\n\nStart by filling in the following table for the numbers 1:30 manually, to get a feel for the task.\n\nFizzbuzz for 1:30\n\n\nInput\nOutput\n\n\n\n\n1\n\n\n\n2\n\n\n\n3\n\n\n\n4\n\n\n\n5\n\n\n\n6\n\n\n\n7\n\n\n\n8\n\n\n\n9\n\n\n\n10\n\n\n\n11\n\n\n\n12\n\n\n\n13\n\n\n\n14\n\n\n\n15\n\n\n\n16\n\n\n\n17\n\n\n\n18\n\n\n\n19\n\n\n\n20\n\n\n\n21\n\n\n\n22\n\n\n\n23\n\n\n\n24\n\n\n\n25\n\n\n\n26\n\n\n\n27\n\n\n\n28\n\n\n\n29\n\n\n\n30\n\n\n\n\nOn paper or using a tool such as excalidraw.com, create a program flow map for the sequence of if-statements you need to evaluate for fizzbuzz. Add the picture to the folder containing this file, and name the picture flowchart.png. Add the picture to Git and commit/push your changes.\n\n\n\nProgram Flow map for FizzBuzz\n\n\nIn the chunk below, write code which will solve this problem for a single value x. You should be able to change the value of x at the top of the chunk and still get the correct answer.\n\nx &lt;- 3\n\n# FizzBuzz code goes here\n\n\nx = 3\n\n# FizzBuzz code goes here\n\nModify the code above so that the result is stored in a value y.\n\nx &lt;- 3\ny &lt;- NA\n# FizzBuzz code goes here\n\n\n\nprint(paste(\"For x = \", x, \" my code produces \", y, sep = \"\"))\n\n[1] \"For x = 3 my code produces NA\"\n\n\n\nimport numpy as np\nx = 3\ny = np.nan\n# FizzBuzz code goes here\n\n\n\nprint(\"For x = \"+ str(x)+ \" my code produces \"+ str(y))\n\nFor x = 3 my code produces nan\n\n\n\n\nA vector of FizzBuzz\nThe code in the previous problem only solves FizzBuzz for a single value of x. Extend your code using a loop so that it will work for all values in a vector xx, storing values in a corresponding vector yy.\nYou can copy/paste code from previous chunks to make this chunk easier.\n\nxx &lt;- 1:30\nyy &lt;- rep(NA, times = 30)\n\n# FizzBuzz code goes here\n\n\n# Printing the results in a data frame\nres &lt;- cbind(x = xx, result = yy)\nres\n\n       x result\n [1,]  1     NA\n [2,]  2     NA\n [3,]  3     NA\n [4,]  4     NA\n [5,]  5     NA\n [6,]  6     NA\n [7,]  7     NA\n [8,]  8     NA\n [9,]  9     NA\n[10,] 10     NA\n[11,] 11     NA\n[12,] 12     NA\n[13,] 13     NA\n[14,] 14     NA\n[15,] 15     NA\n[16,] 16     NA\n[17,] 17     NA\n[18,] 18     NA\n[19,] 19     NA\n[20,] 20     NA\n[21,] 21     NA\n[22,] 22     NA\n[23,] 23     NA\n[24,] 24     NA\n[25,] 25     NA\n[26,] 26     NA\n[27,] 27     NA\n[28,] 28     NA\n[29,] 29     NA\n[30,] 30     NA\n\n\n\nimport pandas as pd\nxx = np.array(range(30)) + 1\nyy = [np.nan]*30\n\n# FizzBuzz code goes here\n\n\n# Printing the results in a data frame\nres = pd.DataFrame({\"x\": xx, \"result\": yy})\nres\n\n     x  result\n0    1     NaN\n1    2     NaN\n2    3     NaN\n3    4     NaN\n4    5     NaN\n5    6     NaN\n6    7     NaN\n7    8     NaN\n8    9     NaN\n9   10     NaN\n10  11     NaN\n11  12     NaN\n12  13     NaN\n13  14     NaN\n14  15     NaN\n15  16     NaN\n16  17     NaN\n17  18     NaN\n18  19     NaN\n19  20     NaN\n20  21     NaN\n21  22     NaN\n22  23     NaN\n23  24     NaN\n24  25     NaN\n25  26     NaN\n26  27     NaN\n27  28     NaN\n28  29     NaN\n29  30     NaN\n\n\n\n\nFunctions and FizzBuzz\nIn the previous question, you extended your fizzbuzz code to iterate through a vector xx and produce a result yy. Can you generalize this, writing a function fizzbuzz that takes a variable x and returns a corresponding fizzbuzzified variable? Your function should be able to handle x that is a vector or a scalar value, and should store your solution in yy.\n\nxx &lt;- sample(1:100, 10) # get a random xx\nyy &lt;- rep(NA, 10)\n\nfizzbuzz &lt;- function(x) {\n  # Your code goes here\n}\n\nyy &lt;- fizzbuzz(x = xx)\n\n# Printing the results in a data frame\nres &lt;- cbind(x = xx, result = yy)\nres\n\n       x\n [1,] 50\n [2,] 32\n [3,] 77\n [4,] 95\n [5,] 93\n [6,]  6\n [7,] 27\n [8,] 85\n [9,] 28\n[10,] 38\n\n\n\nimport pandas as pd\nfrom random import choices\nxx = np.array(choices(range(100), k = 10)) + 1\n\n\ndef fizzbuzz(x):\n  y = [np.nan]*len(x) # this just defines something to return\n  # Your code goes here\n  return y\n\nyy = fizzbuzz(x = xx)\n\n# Printing the results in a data frame\nres = pd.DataFrame({\"x\": xx, \"result\": yy})\nres\n\n     x  result\n0   37     NaN\n1    3     NaN\n2   59     NaN\n3   19     NaN\n4   97     NaN\n5   78     NaN\n6   69     NaN\n7   29     NaN\n8   89     NaN\n9  100     NaN\n\n\n\n\nDefensive Programming\nYou cannot always assume that the person using your functions knows what they’re doing. Add a check to the function you wrote in the last question so that it will handle non-numeric input by issuing an error message.\nIn R, you can use the function stopifnot() to halt function execution if there is an error; this will give you a basic error message.\n\nstopifnot(2 &gt; 3)\n\nError: 2 &gt; 3 is not TRUE\n\n\nIn Python, you can use a try: statement with a except: clause. This functions like an if-else statement, where if no error occurs, the except statement is never executed.\n\ntry: \n  int(\"hello\")\nexcept ValueError: \n  print(\"Error: could not turn value into an integer\")\n\nError: could not turn value into an integer\n\n\nSee more examples of this in the Input Validation section of the textbook.\n\nxx &lt;- sample(1:100, 10) # get a random xx\nyy &lt;- rep(NA, 10)\n\nfizzbuzz &lt;- function(x) {\n  # Your code goes here\n}\n\nyy &lt;- fizzbuzz(x = xx)\n\n# Printing the results in a data frame\nres &lt;- cbind(x = xx, result = yy)\nres\n\n       x\n [1,] 62\n [2,] 72\n [3,]  1\n [4,] 64\n [5,]  8\n [6,] 22\n [7,] 68\n [8,] 87\n [9,] 41\n[10,] 31\n\n\n\nimport pandas as pd\nfrom random import choices\nxx = np.array(choices(range(100), k = 10)) + 1\n\n\ndef fizzbuzz(x):\n  y = [np.nan]*len(x) # this just defines something to return\n  # Your code goes here\n  return y\n\nyy = fizzbuzz(x = xx)\n\n# Printing the results in a data frame\nres = pd.DataFrame({\"x\": xx, \"result\": yy})\nres\n\n     x  result\n0    8     NaN\n1   76     NaN\n2   92     NaN\n3   34     NaN\n4   96     NaN\n5   10     NaN\n6  100     NaN\n7   33     NaN\n8   26     NaN\n9   67     NaN"
  },
  {
    "objectID": "homework/05.html",
    "href": "homework/05.html",
    "title": "Chocolate Chip Cookies",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom."
  },
  {
    "objectID": "homework/05.html#reading-in-the-data",
    "href": "homework/05.html#reading-in-the-data",
    "title": "Chocolate Chip Cookies",
    "section": "Reading In the Data",
    "text": "Reading In the Data\nFirst, read in the CSV data of cookie ingredients. Make sure that your end-result data has appropriate types for each column - these should match the types provided in the documentation in the README.md file."
  },
  {
    "objectID": "homework/05.html#exploratory-data-analysis",
    "href": "homework/05.html#exploratory-data-analysis",
    "title": "Chocolate Chip Cookies",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\nExploratory data analysis is the process of getting familiar with your dataset. To get started, this blog post provides a nice checklist to get you thinking:\n\n\nWhat question(s) are you trying to solve (or prove wrong)?\nWhat kind of data do you have and how do you treat different types?\nWhat’s missing from the data and how do you deal with it?\nWhere are the outliers and why should you care about them?\nHow can you add, change or remove features to get more out of your data?\n\n\n\nGenerating Questions\nGenerate at least 5 questions you might explore using this database of cookie ingredients.\n\n\n\n\n\n\n\n\n\nSkimming the Data\nOne thing we often want to do during EDA is to examine the quality of the data - are there missing values? What quirks might exist in the dataset?\nThe skimr package in R, and the similar skimpy package in python (which has a much better name, in my opinion), can help provide visual summaries of the data.\nInstall both packages, and read the package documentation (R, Python).\n[Part 1] Use each package and generate summaries of your data that require the use of at least some non-default options in each package’s skim function.\n[Part 2] Write 1-2 sentences about what you can tell from each summary display you generate. Did you discover anything new about the data?\n\n\nGenerating Tables\nAnother useful technique for exploratory data analysis is to generate summary tables. You may want to use the dplyr package in R (group_by or count functions), as well as the groupby and count methods in Pandas. Python example, R example\n[Part 1] Using R and Python, generate a table that shows what proportion of recipes contain each type of ingredient, for the most common 20 ingredients.\n[Part 2] Print out a character string that lists all of the ingredients that do not appear in at least 20 recipes.\n(Delete this note, but you can include data values inline in markdown text by using backticks, at least in R. For instance, here is R’s built in value for pi: 3.1415927. Unfortunately, this doesn’t work in python using the knitr markdown engine, but you can print the list out in python anyways using a code chunk.)\n\n\nVisualization\nUsing whatever plotting system you are comfortable with in R or python, see if you can create a couple of useful exploratory data visualizations which address one of the questions you wrote above - or another question which you’ve come up with as you’ve worked on this assignment.\n[Part 1] Create at least one plot (it doesn’t have to be pretty) that showcases an interesting facet of the data.\n[Part 2] Write 2-3 sentences about what you can learn from that plot and what directions you might want to investigate from here."
  },
  {
    "objectID": "homework/07.html",
    "href": "homework/07.html",
    "title": "Homework: Murder in SQL City",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom."
  },
  {
    "objectID": "homework/07.html#instructions",
    "href": "homework/07.html#instructions",
    "title": "Homework: Murder in SQL City",
    "section": "Instructions",
    "text": "Instructions\nNorthwestern University’s Knight lab created a SQL murder mystery to help users sharpen their database skills by solving the crime that happened at SQL city. There are tables with different pieces of information - social media checkins, people, drivers licenses, crime scene reports, police interviews, and more.\nPick R or Python, and solve the murder mystery, showing all of your work in this document.\nYour solution must be reproducible – that is, you should use dplyr verbs, table joins, etc. to solve the mystery, rather than just looking through the tables yourselves.\nYou may work in groups of 2-4 people on this assignment. Each person should turn in their own assignment, but should list their group members as authors.\nMake sure you do your due diligence! You should double check your answer and print out the guilty party’s interview from the database.\nWhen you are finished with the assignment:\n\nOnce you have finished this assignment, render the document (Ctrl/Cmd-Shift-K or the Render button).\nCommit the qmd file and any other files you have changed to the repository and push your changes.\nIn Canvas, submit a link to your github repository containing the updated files.\nProvide the name of the guilty party in the text input field on Canvas, and make sure all of your work is on GitHub to receive full credit.\n\nThe chunks below use the code to read in each of the 8 tables of data for this assignment.\nHints:\n\nYou can use a lot of filter statements, but it will in many cases be easier to use joins.\nSee if you can write code that doesn’t require you to type out knowledge gained from a previous clue (e.g. pipe your results from one query into the next)\n\n\nA crime has taken place and the detective needs your help. The detective gave you the crime scene report, but you somehow lost it. You vaguely remember that the crime was a murder that occurred sometime on January 15, 2018 and that it took place in SQL City. All the clues to this mystery are buried in a huge database, and you need to use R and SAS to navigate through this network of information. Your first step to solving the mystery is to retrieve the corresponding crime scene report from the police department’s database.\nThis database schema may help you figure out how to navigate the database:\n\n\n\nsql-murder-mystery database schema diagram"
  },
  {
    "objectID": "homework/07.html#r",
    "href": "homework/07.html#r",
    "title": "Homework: Murder in SQL City",
    "section": "R",
    "text": "R\n\nlibrary(RSQLite)\nlibrary(DBI)\n\n# Your database connection code goes here. Store the connection as con \ncon &lt;- dbConnect(RSQLite::SQLite(), \"sql-murder-mystery.db\")\n\ntable_names &lt;- c(\"crime_scene_report\", \n                 \"drivers_license\", \n                 \"facebook_event_checkin\",\n                 \"get_fit_now_check_in\", \n                 \"get_fit_now_member\", \n                 \"income\", \n                 \"interview\",\n                 \"person\")\n\n# For each table name, read the tables in and store them as the name of the table\npurrr::walk(table_names, function(x) {\n  assign(x, dbReadTable(con, x), envir = .GlobalEnv)\n})\n\n# close the connection when you're done\ndbDisconnect(con)"
  },
  {
    "objectID": "homework/07.html#python",
    "href": "homework/07.html#python",
    "title": "Homework: Murder in SQL City",
    "section": "Python",
    "text": "Python\n\nimport pandas as pd\nimport sqlite3\n\n# Read sqlite query results into a pandas DataFrame\ncon = sqlite3.connect(\"sql-murder-mystery.db\")\n\ncrime_scene_report = pd.read_sql_query(\"SELECT * from crime_scene_report\", con)\ndrivers_license = pd.read_sql_query(\"SELECT * from drivers_license\", con)\nfacebook_event_checkin = pd.read_sql_query(\"SELECT * from facebook_event_checkin\", con)\nget_fit_now_check_in = pd.read_sql_query(\"SELECT * from get_fit_now_check_in\", con)\nget_fit_now_member = pd.read_sql_query(\"SELECT * from get_fit_now_member\", con)\nincome = pd.read_sql_query(\"SELECT * from income\", con)\ninterview = pd.read_sql_query(\"SELECT * from interview\", con)\nperson = pd.read_sql_query(\"SELECT * from person\", con)\n\n# Verify that result of SQL query is stored in the dataframe\nprint(crime_scene_report.head())\n\n       date  ...      city\n0  20180115  ...       NYC\n1  20180115  ...    Albany\n2  20180115  ...      Reno\n3  20180215  ...  SQL City\n4  20180215  ...  SQL City\n\n[5 rows x 4 columns]\n\n\ncon.close()"
  },
  {
    "objectID": "homework/10.html",
    "href": "homework/10.html",
    "title": "Homework 10: Reproducibility",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom."
  },
  {
    "objectID": "homework/12.html",
    "href": "homework/12.html",
    "title": "Homework 12: Simulation",
    "section": "",
    "text": "Note: This assignment must be submitted in github classroom."
  },
  {
    "objectID": "slides/01a-intro.html#contact-info",
    "href": "slides/01a-intro.html#contact-info",
    "title": "Stat 850 Introduction",
    "section": "Contact Info",
    "text": "Contact Info\n\nEmail: susan.vanderplas@unl.edu\nOffice: 343D Hardin Hall North Wing\nOffice Hours:\nhttps://calendly.com/drvanderplas/officehours\nSelf-serve, by Zoom unless you specify otherwise."
  },
  {
    "objectID": "slides/01a-intro.html#tentative-schedule",
    "href": "slides/01a-intro.html#tentative-schedule",
    "title": "Stat 850 Introduction",
    "section": "Tentative Schedule",
    "text": "Tentative Schedule\n\n\n\nTentative schedule of class topics & project due dates\n\n\nWeek\nTopic\nImportant Dates\n\n\n\n\n1\nExploring the Toolbox\n\n\n\n2\nIntroduction to Programming and Variable Types\n\n\n\n3\nData and Control Structures\n\n\n\n4\nData Programming\n\n\n\n5\nReading and Exploring Data\n\n\n\n6\nData Cleaning and Manipulation\n\n\n\n7\nData Joins &Transformations\n\n\n\n8\nGraphics\n\n\n\n9\nFall Break & Midterm Exam\nMidterm: Oct 23\n\n\n10\nReproducibility & Documents\n\n\n\n11\nFunctional Programming\n\n\n\n12\nSimulation\n\n\n\n13\nSimulation\n\n\n\n14\nThanksgiving\n\n\n\n15\nInteractive Graphics\n\n\n\n16\nFinal Part 1\n\n\n\n17\nFinal Exam\nFinal: Dec 17"
  },
  {
    "objectID": "slides/01a-intro.html#course-rhythm",
    "href": "slides/01a-intro.html#course-rhythm",
    "title": "Stat 850 Introduction",
    "section": "Course Rhythm",
    "text": "Course Rhythm\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nF\nS\nS\nM\nT\nW\nR\nF\n\n\n\n\n\nWeek before\n\nWeek Start\n\n\n\n\n\n\n\nTextbook\nSkim\nRead\nWork Examples\nReading Quiz\nAssignment-focused review\nReview difficult concepts\nSummarize important concepts\n\n\n\nHomework\n\n\nAccept assignment & pull\nRead assignment\nWork in class\nWork at home (if necessary)\nWork in class\nSubmit assignment\n\n\nContextual Reading\n\n\n\n\n\n\nRead articles\nRead articles & summarize"
  },
  {
    "objectID": "slides/01a-intro.html#grading",
    "href": "slides/01a-intro.html#grading",
    "title": "Stat 850 Introduction",
    "section": "Grading",
    "text": "Grading\n\n\n\nAssignments\nWeight\n\n\n\n\nReading Quizzes & Participation\n10%\n\n\nWeekly Homework\n50%\n\n\nMidterm\n20%\n\n\nFinal\n20%"
  },
  {
    "objectID": "slides/01a-intro.html#grading-1",
    "href": "slides/01a-intro.html#grading-1",
    "title": "Stat 850 Introduction",
    "section": "Grading",
    "text": "Grading\n\n\n\nLetter grade\nX +\nX\nX -\n\n\n\n\nA\n96.5\n93.5\n89.5\n\n\nB\n86.5\n83.5\n79.5\n\n\nC\n76.5\n73.5\n69.5\n\n\nD\n66.5\n63.5\n60.5\n\n\nF\n&lt;60.5"
  },
  {
    "objectID": "slides/01a-intro.html#exams",
    "href": "slides/01a-intro.html#exams",
    "title": "Stat 850 Introduction",
    "section": "Exams",
    "text": "Exams\n\nMidterm and Final\nIn class component + take-home component\nFinal take-home component will happen during “dead week”\nExams will include at least one response question from the contextual readings"
  },
  {
    "objectID": "slides/01a-intro.html#ai-use-policy",
    "href": "slides/01a-intro.html#ai-use-policy",
    "title": "Stat 850 Introduction",
    "section": "AI Use Policy",
    "text": "AI Use Policy\n\nUsing AI to write code (Don’t!)\nUsing AI to explain an error (Ok)\nUsing AI to write explanations (Don’t)\nIf you use AI\n\nDocument the use, version, input, and output\nProvide a diff of your submission vs. the AI output"
  },
  {
    "objectID": "slides/01a-intro.html#oral-exams",
    "href": "slides/01a-intro.html#oral-exams",
    "title": "Stat 850 Introduction",
    "section": "Oral Exams",
    "text": "Oral Exams\n\nI reserve the right to replace any grade with an oral exam on your submission\nAllows me to clarify how much you understand when that isn’t clear\nHelps when I write an ambiguous question or you miss a key part of a question\nIf you can’t explain your code/answer you don’t get any credit"
  },
  {
    "objectID": "slides/02a-Finding-Your-Way.html#todays-goals",
    "href": "slides/02a-Finding-Your-Way.html#todays-goals",
    "title": "Finding your way in R and Python",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\n\nKnow the 3 different ways to execute code from within RStudio\n\nTerminal (Command Line)\nSource Script (RStudio Button)\nInteractive Mode (line by line)\n\nDifferentiate between the Console and the Terminal\nDifferentiate between R and Python in the Console"
  },
  {
    "objectID": "slides/02a-Finding-Your-Way.html#rstudio-projects",
    "href": "slides/02a-Finding-Your-Way.html#rstudio-projects",
    "title": "Finding your way in R and Python",
    "section": "RStudio Projects",
    "text": "RStudio Projects\nRStudio projects are a way to keep your work organized.\nLet’s create one for this week’s class work.\n\nCreating an RStudio Project"
  },
  {
    "objectID": "slides/02a-Finding-Your-Way.html#ways-to-execute-code",
    "href": "slides/02a-Finding-Your-Way.html#ways-to-execute-code",
    "title": "Finding your way in R and Python",
    "section": "Ways to Execute Code",
    "text": "Ways to Execute Code\nDownload madlibs.py and place it in your newly created project."
  },
  {
    "objectID": "slides/02a-Finding-Your-Way.html#command-line",
    "href": "slides/02a-Finding-Your-Way.html#command-line",
    "title": "Finding your way in R and Python",
    "section": "Command Line",
    "text": "Command Line\n\nRunning madlibs.py at the command line"
  },
  {
    "objectID": "slides/02a-Finding-Your-Way.html#source-script",
    "href": "slides/02a-Finding-Your-Way.html#source-script",
    "title": "Finding your way in R and Python",
    "section": "Source Script",
    "text": "Source Script\n\nRunning madlibs.py using Source Script in RStudio"
  },
  {
    "objectID": "slides/02a-Finding-Your-Way.html#next-class",
    "href": "slides/02a-Finding-Your-Way.html#next-class",
    "title": "Finding your way in R and Python",
    "section": "Next Class",
    "text": "Next Class\n\nBasic Data Types\nCreating Variables\nUsing R/Python as a calculator\nIntro to Debugging"
  },
  {
    "objectID": "slides/03-fizzing-and-buzzing.html#this-weeks-big-picture-goal",
    "href": "slides/03-fizzing-and-buzzing.html#this-weeks-big-picture-goal",
    "title": "Fizzing and Buzzing",
    "section": "This week’s big picture goal:",
    "text": "This week’s big picture goal:\nGoing from using functions to writing the first functions"
  },
  {
    "objectID": "slides/03-fizzing-and-buzzing.html#todays-goals",
    "href": "slides/03-fizzing-and-buzzing.html#todays-goals",
    "title": "Fizzing and Buzzing",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\nUnderstand\n\nDistinguish and recognize data structures\nUse Control structures - if/else and for loops"
  },
  {
    "objectID": "slides/03-fizzing-and-buzzing.html#todays-goals-1",
    "href": "slides/03-fizzing-and-buzzing.html#todays-goals-1",
    "title": "Fizzing and Buzzing",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\nDo\n\nHomework 3 – read carefully, work step by step from top to bottom"
  },
  {
    "objectID": "slides/03-fizzing-and-buzzing.html#todays-goals-2",
    "href": "slides/03-fizzing-and-buzzing.html#todays-goals-2",
    "title": "Fizzing and Buzzing",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\nRead Up On\n\nControl Structures, program flows\nWriting Functions"
  },
  {
    "objectID": "slides/03-fizzing-and-buzzing.html#resources",
    "href": "slides/03-fizzing-and-buzzing.html#resources",
    "title": "Fizzing and Buzzing",
    "section": "Resources",
    "text": "Resources\n\nR cheat sheet\npython cheat sheet"
  },
  {
    "objectID": "slides/03-fizzing-and-buzzing.html#next-class",
    "href": "slides/03-fizzing-and-buzzing.html#next-class",
    "title": "Fizzing and Buzzing",
    "section": "Next class",
    "text": "Next class\n\nFunction writing in R and Python"
  },
  {
    "objectID": "slides/03b-fizzing-and-buzzing.html#this-weeks-big-picture-goal",
    "href": "slides/03b-fizzing-and-buzzing.html#this-weeks-big-picture-goal",
    "title": "Fizzing and Buzzing (Part 2)",
    "section": "This week’s big picture goal:",
    "text": "This week’s big picture goal:\nGoing from using functions to writing the first functions"
  },
  {
    "objectID": "slides/03b-fizzing-and-buzzing.html#todays-goals",
    "href": "slides/03b-fizzing-and-buzzing.html#todays-goals",
    "title": "Fizzing and Buzzing (Part 2)",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\nUnderstand\n\nKnow how to move code into a function (and what changes)\nUse error handling appropriately"
  },
  {
    "objectID": "slides/03b-fizzing-and-buzzing.html#todays-goals-1",
    "href": "slides/03b-fizzing-and-buzzing.html#todays-goals-1",
    "title": "Fizzing and Buzzing (Part 2)",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\nDo\n\nHomework 3 – read carefully, work step by step from top to bottom"
  },
  {
    "objectID": "slides/03b-fizzing-and-buzzing.html#todays-goals-2",
    "href": "slides/03b-fizzing-and-buzzing.html#todays-goals-2",
    "title": "Fizzing and Buzzing (Part 2)",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\nRead Up On\n\nControl Structures, program flows\nWriting Functions"
  },
  {
    "objectID": "slides/03b-fizzing-and-buzzing.html#resources",
    "href": "slides/03b-fizzing-and-buzzing.html#resources",
    "title": "Fizzing and Buzzing (Part 2)",
    "section": "Resources",
    "text": "Resources\n\nR cheat sheet\npython cheat sheet"
  },
  {
    "objectID": "slides/03b-fizzing-and-buzzing.html#next-class",
    "href": "slides/03b-fizzing-and-buzzing.html#next-class",
    "title": "Fizzing and Buzzing (Part 2)",
    "section": "Next class",
    "text": "Next class\n\nFunction writing in R and Python"
  },
  {
    "objectID": "slides/05-data-explorations.html#this-weeks-big-picture-goal",
    "href": "slides/05-data-explorations.html#this-weeks-big-picture-goal",
    "title": "Exploring Data",
    "section": "This week’s big picture goal:",
    "text": "This week’s big picture goal:\nGetting comfortable working with data sets and start asking questions!"
  },
  {
    "objectID": "slides/05-data-explorations.html#todays-goals",
    "href": "slides/05-data-explorations.html#todays-goals",
    "title": "Exploring Data",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\n\nClone the repo for Homework 5\nMake sure that you are able to render index.qmd\nStart to explore! https://www.mrdbourke.com/a-gentle-introduction-to-exploratory-data-analysis/"
  },
  {
    "objectID": "slides/05-data-explorations.html#resources",
    "href": "slides/05-data-explorations.html#resources",
    "title": "Exploring Data",
    "section": "Resources",
    "text": "Resources\n\nR cheat sheet\npython cheat sheet"
  },
  {
    "objectID": "slides/06b-data-wrangling.html#this-weeks-big-picture-goal",
    "href": "slides/06b-data-wrangling.html#this-weeks-big-picture-goal",
    "title": "Wrangling Data",
    "section": "This week’s big picture goal:",
    "text": "This week’s big picture goal:\nWorking with text and practicing exploration skills"
  },
  {
    "objectID": "slides/06b-data-wrangling.html#organization",
    "href": "slides/06b-data-wrangling.html#organization",
    "title": "Wrangling Data",
    "section": "Organization",
    "text": "Organization\n\ncode for homework submissions:\n\nalways make sure that the index.qmd file renders for you (that’s where your answers are supposed to be)\ncomment out any and all calls that produce:\n\nexcessive output: ls(), dir(), print()\nadditional windows: View(), ? (or ??, help),\ninstall software: install.packages(),\n\nreferences to files outside of your repository"
  },
  {
    "objectID": "slides/06b-data-wrangling.html#todays-goals",
    "href": "slides/06b-data-wrangling.html#todays-goals",
    "title": "Wrangling Data",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\n\nExploration!\n\nIdeally you have passed checkpoint 2 for both R and python. If not, finish up checkpoint 2 for one language and proceed with that."
  },
  {
    "objectID": "slides/06b-data-wrangling.html#resources",
    "href": "slides/06b-data-wrangling.html#resources",
    "title": "Wrangling Data",
    "section": "Resources",
    "text": "Resources\n\nR cheat sheet\npython cheat sheet"
  },
  {
    "objectID": "slides/08-graphics.html#this-weeks-big-picture-goal",
    "href": "slides/08-graphics.html#this-weeks-big-picture-goal",
    "title": "Graphics",
    "section": "This week’s big picture goal:",
    "text": "This week’s big picture goal:\n\nCreate well-designed graphics\nIdentify which chart(s) to use\nUnderstand how cognition/perception impact graphics"
  },
  {
    "objectID": "slides/08-graphics.html#todays-goals",
    "href": "slides/08-graphics.html#todays-goals",
    "title": "Graphics",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\n\nPull the homework\nCreate graphics in R and python\nStart thinking about what makes a chart “ugly”"
  },
  {
    "objectID": "slides/08-graphics.html#ugly-graphics",
    "href": "slides/08-graphics.html#ugly-graphics",
    "title": "Graphics",
    "section": "Ugly Graphics",
    "text": "Ugly Graphics\n\n\n\n\n\n\nImage Source\n\n\n\n\nWeekly wages aren’t really comparable to home prices, scale-wise\nAlternatives:\n\ncompare annual wages to home prices\nuse some other standard scaling for affordability"
  },
  {
    "objectID": "slides/08-graphics.html#ugly-graphics-1",
    "href": "slides/08-graphics.html#ugly-graphics-1",
    "title": "Graphics",
    "section": "Ugly Graphics",
    "text": "Ugly Graphics\n\nImage Source"
  },
  {
    "objectID": "slides/08-graphics.html#ugly-graphics-2",
    "href": "slides/08-graphics.html#ugly-graphics-2",
    "title": "Graphics",
    "section": "Ugly Graphics",
    "text": "Ugly Graphics\n\nImage Source"
  },
  {
    "objectID": "slides/08-graphics.html#good-graphics",
    "href": "slides/08-graphics.html#good-graphics",
    "title": "Graphics",
    "section": "Good Graphics",
    "text": "Good Graphics\n\nImage Source"
  },
  {
    "objectID": "slides/08-graphics.html#good-graphics-1",
    "href": "slides/08-graphics.html#good-graphics-1",
    "title": "Graphics",
    "section": "Good Graphics",
    "text": "Good Graphics\n\nImage Source"
  },
  {
    "objectID": "slides/08-graphics.html#good-graphics-2",
    "href": "slides/08-graphics.html#good-graphics-2",
    "title": "Graphics",
    "section": "Good Graphics",
    "text": "Good Graphics\n\n\n\nImage source"
  },
  {
    "objectID": "slides/11-simulation.html#homework-project-work",
    "href": "slides/11-simulation.html#homework-project-work",
    "title": "Simulation",
    "section": "Homework & Project work",
    "text": "Homework & Project work\n\ndue dates … some are harder than others.\n\nI realize that RStudio was freezing up … a lot. So this one is not as hard.\nGenerally: you can (re-)submit assignments. If they are egregiously late, I will deduct a late penalty.\nActually hard deadline: Monday after Thanksgiving, Dec 2 2024"
  },
  {
    "objectID": "slides/11-simulation.html#remainder-of-the-semester",
    "href": "slides/11-simulation.html#remainder-of-the-semester",
    "title": "Simulation",
    "section": "Remainder of the semester",
    "text": "Remainder of the semester\n\nOnly two more homework assignments!\n\nSimulation & interactive graphics\n\nProject work!\n\nhttps://posit.co/blog/closeread-prize-announcement/"
  },
  {
    "objectID": "slides/11-simulation.html#this-weeks-big-picture-goal",
    "href": "slides/11-simulation.html#this-weeks-big-picture-goal",
    "title": "Simulation",
    "section": "This week’s big picture goal:",
    "text": "This week’s big picture goal:\nBringing everything together - working on a project-like homework."
  },
  {
    "objectID": "slides/11-simulation.html#todays-goals",
    "href": "slides/11-simulation.html#todays-goals",
    "title": "Simulation",
    "section": "Today’s Goals:",
    "text": "Today’s Goals:\n\nIn Canvas, follow the Github Classroom link to Homework 11\nClone the repo for Homework 11 to your local machine\nThree deliverables in total: pseudocode.qmd (this week), craps-code.qmd, and simulation.qmd"
  },
  {
    "objectID": "slides/11-simulation.html#resources",
    "href": "slides/11-simulation.html#resources",
    "title": "Simulation",
    "section": "Resources",
    "text": "Resources\n\nR cheat sheet\npython cheat sheet"
  }
]